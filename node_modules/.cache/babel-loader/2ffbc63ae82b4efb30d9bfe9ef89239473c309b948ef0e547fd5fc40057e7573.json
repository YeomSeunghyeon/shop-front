{"ast":null,"code":"import path, { resolve } from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { readFileSync } from 'node:fs';\nconst {\n  version\n} = JSON.parse(readFileSync(new URL('../../package.json', import.meta.url)).toString());\nconst VERSION = version;\nconst DEFAULT_MAIN_FIELDS = ['module', 'jsnext:main', 'jsnext'];\n// Baseline support browserslist\n// \"defaults and supports es6-module and supports es6-module-dynamic-import\"\n// Higher browser versions may be needed for extra features.\nconst ESBUILD_MODULES_TARGET = ['es2020', 'edge88', 'firefox78', 'chrome87', 'safari14'];\nconst DEFAULT_EXTENSIONS = ['.mjs', '.js', '.mts', '.ts', '.jsx', '.tsx', '.json'];\nconst DEFAULT_CONFIG_FILES = ['vite.config.js', 'vite.config.mjs', 'vite.config.ts', 'vite.config.cjs', 'vite.config.mts', 'vite.config.cts'];\nconst JS_TYPES_RE = /\\.(?:j|t)sx?$|\\.mjs$/;\nconst CSS_LANGS_RE = /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\nconst OPTIMIZABLE_ENTRY_RE = /\\.[cm]?[jt]s$/;\nconst SPECIAL_QUERY_RE = /[?&](?:worker|sharedworker|raw|url)\\b/;\n/**\n * Prefix for resolved fs paths, since windows paths may not be valid as URLs.\n */\nconst FS_PREFIX = `/@fs/`;\n/**\n * Prefix for resolved Ids that are not valid browser import specifiers\n */\nconst VALID_ID_PREFIX = `/@id/`;\n/**\n * Plugins that use 'virtual modules' (e.g. for helper functions), prefix the\n * module ID with `\\0`, a convention from the rollup ecosystem.\n * This prevents other plugins from trying to process the id (like node resolution),\n * and core features like sourcemaps can use this info to differentiate between\n * virtual modules and regular files.\n * `\\0` is not a permitted char in import URLs so we have to replace them during\n * import analysis. The id will be decoded back before entering the plugins pipeline.\n * These encoded virtual ids are also prefixed by the VALID_ID_PREFIX, so virtual\n * modules in the browser end up encoded as `/@id/__x00__{id}`\n */\nconst NULL_BYTE_PLACEHOLDER = `__x00__`;\nconst CLIENT_PUBLIC_PATH = `/@vite/client`;\nconst ENV_PUBLIC_PATH = `/@vite/env`;\nconst VITE_PACKAGE_DIR = resolve(\n// import.meta.url is `dist/node/constants.js` after bundle\nfileURLToPath(import.meta.url), '../../..');\nconst CLIENT_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/client.mjs');\nconst ENV_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/env.mjs');\nconst CLIENT_DIR = path.dirname(CLIENT_ENTRY);\n// ** READ THIS ** before editing `KNOWN_ASSET_TYPES`.\n//   If you add an asset to `KNOWN_ASSET_TYPES`, make sure to also add it\n//   to the TypeScript declaration file `packages/vite/client.d.ts` and\n//   add a mime type to the `registerCustomMime` in\n//   `packages/vite/src/node/plugin/assets.ts` if mime type cannot be\n//   looked up by mrmime.\nconst KNOWN_ASSET_TYPES = [\n// images\n'apng', 'png', 'jpe?g', 'jfif', 'pjpeg', 'pjp', 'gif', 'svg', 'ico', 'webp', 'avif',\n// media\n'mp4', 'webm', 'ogg', 'mp3', 'wav', 'flac', 'aac', 'opus',\n// fonts\n'woff2?', 'eot', 'ttf', 'otf',\n// other\n'webmanifest', 'pdf', 'txt'];\nconst DEFAULT_ASSETS_RE = new RegExp(`\\\\.(` + KNOWN_ASSET_TYPES.join('|') + `)(\\\\?.*)?$`);\nconst DEP_VERSION_RE = /[?&](v=[\\w.-]+)\\b/;\nconst loopbackHosts = new Set(['localhost', '127.0.0.1', '::1', '0000:0000:0000:0000:0000:0000:0000:0001']);\nconst wildcardHosts = new Set(['0.0.0.0', '::', '0000:0000:0000:0000:0000:0000:0000:0000']);\nconst DEFAULT_DEV_PORT = 5173;\nconst DEFAULT_PREVIEW_PORT = 4173;\nexport { CLIENT_DIR, CLIENT_ENTRY, CLIENT_PUBLIC_PATH, CSS_LANGS_RE, DEFAULT_ASSETS_RE, DEFAULT_CONFIG_FILES, DEFAULT_DEV_PORT, DEFAULT_EXTENSIONS, DEFAULT_MAIN_FIELDS, DEFAULT_PREVIEW_PORT, DEP_VERSION_RE, ENV_ENTRY, ENV_PUBLIC_PATH, ESBUILD_MODULES_TARGET, FS_PREFIX, JS_TYPES_RE, KNOWN_ASSET_TYPES, NULL_BYTE_PLACEHOLDER, OPTIMIZABLE_ENTRY_RE, SPECIAL_QUERY_RE, VALID_ID_PREFIX, VERSION, VITE_PACKAGE_DIR, loopbackHosts, wildcardHosts };","map":{"version":3,"names":["path","resolve","fileURLToPath","readFileSync","version","JSON","parse","URL","import","meta","url","toString","VERSION","DEFAULT_MAIN_FIELDS","ESBUILD_MODULES_TARGET","DEFAULT_EXTENSIONS","DEFAULT_CONFIG_FILES","JS_TYPES_RE","CSS_LANGS_RE","OPTIMIZABLE_ENTRY_RE","SPECIAL_QUERY_RE","FS_PREFIX","VALID_ID_PREFIX","NULL_BYTE_PLACEHOLDER","CLIENT_PUBLIC_PATH","ENV_PUBLIC_PATH","VITE_PACKAGE_DIR","CLIENT_ENTRY","ENV_ENTRY","CLIENT_DIR","dirname","KNOWN_ASSET_TYPES","DEFAULT_ASSETS_RE","RegExp","join","DEP_VERSION_RE","loopbackHosts","Set","wildcardHosts","DEFAULT_DEV_PORT","DEFAULT_PREVIEW_PORT"],"sources":["C:/Users/100li/node_modules/vite/dist/node/constants.js"],"sourcesContent":["import path, { resolve } from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport { readFileSync } from 'node:fs';\n\nconst { version } = JSON.parse(readFileSync(new URL('../../package.json', import.meta.url)).toString());\nconst VERSION = version;\nconst DEFAULT_MAIN_FIELDS = [\n    'module',\n    'jsnext:main',\n    'jsnext',\n];\n// Baseline support browserslist\n// \"defaults and supports es6-module and supports es6-module-dynamic-import\"\n// Higher browser versions may be needed for extra features.\nconst ESBUILD_MODULES_TARGET = [\n    'es2020',\n    'edge88',\n    'firefox78',\n    'chrome87',\n    'safari14',\n];\nconst DEFAULT_EXTENSIONS = [\n    '.mjs',\n    '.js',\n    '.mts',\n    '.ts',\n    '.jsx',\n    '.tsx',\n    '.json',\n];\nconst DEFAULT_CONFIG_FILES = [\n    'vite.config.js',\n    'vite.config.mjs',\n    'vite.config.ts',\n    'vite.config.cjs',\n    'vite.config.mts',\n    'vite.config.cts',\n];\nconst JS_TYPES_RE = /\\.(?:j|t)sx?$|\\.mjs$/;\nconst CSS_LANGS_RE = /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\nconst OPTIMIZABLE_ENTRY_RE = /\\.[cm]?[jt]s$/;\nconst SPECIAL_QUERY_RE = /[?&](?:worker|sharedworker|raw|url)\\b/;\n/**\n * Prefix for resolved fs paths, since windows paths may not be valid as URLs.\n */\nconst FS_PREFIX = `/@fs/`;\n/**\n * Prefix for resolved Ids that are not valid browser import specifiers\n */\nconst VALID_ID_PREFIX = `/@id/`;\n/**\n * Plugins that use 'virtual modules' (e.g. for helper functions), prefix the\n * module ID with `\\0`, a convention from the rollup ecosystem.\n * This prevents other plugins from trying to process the id (like node resolution),\n * and core features like sourcemaps can use this info to differentiate between\n * virtual modules and regular files.\n * `\\0` is not a permitted char in import URLs so we have to replace them during\n * import analysis. The id will be decoded back before entering the plugins pipeline.\n * These encoded virtual ids are also prefixed by the VALID_ID_PREFIX, so virtual\n * modules in the browser end up encoded as `/@id/__x00__{id}`\n */\nconst NULL_BYTE_PLACEHOLDER = `__x00__`;\nconst CLIENT_PUBLIC_PATH = `/@vite/client`;\nconst ENV_PUBLIC_PATH = `/@vite/env`;\nconst VITE_PACKAGE_DIR = resolve(\n// import.meta.url is `dist/node/constants.js` after bundle\nfileURLToPath(import.meta.url), '../../..');\nconst CLIENT_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/client.mjs');\nconst ENV_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/env.mjs');\nconst CLIENT_DIR = path.dirname(CLIENT_ENTRY);\n// ** READ THIS ** before editing `KNOWN_ASSET_TYPES`.\n//   If you add an asset to `KNOWN_ASSET_TYPES`, make sure to also add it\n//   to the TypeScript declaration file `packages/vite/client.d.ts` and\n//   add a mime type to the `registerCustomMime` in\n//   `packages/vite/src/node/plugin/assets.ts` if mime type cannot be\n//   looked up by mrmime.\nconst KNOWN_ASSET_TYPES = [\n    // images\n    'apng',\n    'png',\n    'jpe?g',\n    'jfif',\n    'pjpeg',\n    'pjp',\n    'gif',\n    'svg',\n    'ico',\n    'webp',\n    'avif',\n    // media\n    'mp4',\n    'webm',\n    'ogg',\n    'mp3',\n    'wav',\n    'flac',\n    'aac',\n    'opus',\n    // fonts\n    'woff2?',\n    'eot',\n    'ttf',\n    'otf',\n    // other\n    'webmanifest',\n    'pdf',\n    'txt',\n];\nconst DEFAULT_ASSETS_RE = new RegExp(`\\\\.(` + KNOWN_ASSET_TYPES.join('|') + `)(\\\\?.*)?$`);\nconst DEP_VERSION_RE = /[?&](v=[\\w.-]+)\\b/;\nconst loopbackHosts = new Set([\n    'localhost',\n    '127.0.0.1',\n    '::1',\n    '0000:0000:0000:0000:0000:0000:0000:0001',\n]);\nconst wildcardHosts = new Set([\n    '0.0.0.0',\n    '::',\n    '0000:0000:0000:0000:0000:0000:0000:0000',\n]);\nconst DEFAULT_DEV_PORT = 5173;\nconst DEFAULT_PREVIEW_PORT = 4173;\n\nexport { CLIENT_DIR, CLIENT_ENTRY, CLIENT_PUBLIC_PATH, CSS_LANGS_RE, DEFAULT_ASSETS_RE, DEFAULT_CONFIG_FILES, DEFAULT_DEV_PORT, DEFAULT_EXTENSIONS, DEFAULT_MAIN_FIELDS, DEFAULT_PREVIEW_PORT, DEP_VERSION_RE, ENV_ENTRY, ENV_PUBLIC_PATH, ESBUILD_MODULES_TARGET, FS_PREFIX, JS_TYPES_RE, KNOWN_ASSET_TYPES, NULL_BYTE_PLACEHOLDER, OPTIMIZABLE_ENTRY_RE, SPECIAL_QUERY_RE, VALID_ID_PREFIX, VERSION, VITE_PACKAGE_DIR, loopbackHosts, wildcardHosts };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}