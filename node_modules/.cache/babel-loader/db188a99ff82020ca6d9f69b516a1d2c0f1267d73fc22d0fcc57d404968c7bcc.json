{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isNextRouterError\", {\n  enumerable: true,\n  get: function () {\n    return isNextRouterError;\n  }\n});\nconst _notfound = require(\"./not-found\");\nconst _redirect = require(\"./redirect\");\nfunction isNextRouterError(error) {\n  return (0, _redirect.isRedirectError)(error) || (0, _notfound.isNotFoundError)(error);\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["isNextRouterError","error","_redirect","isRedirectError","_notfound","isNotFoundError"],"sources":["C:\\Users\\100li\\node_modules\\next\\src\\client\\components\\is-next-router-error.ts"],"sourcesContent":["import { isNotFoundError, type NotFoundError } from './not-found'\nimport { isRedirectError, type RedirectError } from './redirect'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | NotFoundError {\n  return isRedirectError(error) || isNotFoundError(error)\n}\n"],"mappings":";;;;;+BAQgB;;;WAAAA,iBAAA;;;0BARoC;0BACA;AAO7C,SAASA,kBACdC,KAAc;EAEd,OAAO,IAAAC,SAAA,CAAAC,eAAe,EAACF,KAAA,KAAU,IAAAG,SAAA,CAAAC,eAAe,EAACJ,KAAA;AACnD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}