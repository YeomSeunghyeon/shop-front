{"ast":null,"code":"import { i as isInNodeModules } from './chunks/dep-df561101.js';\nexport { b as build, e as buildErrorMessage, v as createFilter, x as createLogger, c as createServer, g as defineConfig, f as formatPostcssSourceMap, k as getDepOptimizationConfig, m as isDepsOptimizerEnabled, z as isFileServingAllowed, l as loadConfigFromFile, A as loadEnv, u as mergeAlias, q as mergeConfig, n as normalizePath, o as optimizeDeps, a as preprocessCSS, p as preview, j as resolveBaseUrl, h as resolveConfig, B as resolveEnvPrefix, d as resolvePackageData, r as resolvePackageEntry, y as searchForWorkspaceRoot, w as send, s as sortUserPlugins, t as transformWithEsbuild } from './chunks/dep-df561101.js';\nexport { VERSION as version } from './constants.js';\nexport { version as esbuildVersion } from 'esbuild';\nexport { VERSION as rollupVersion } from 'rollup';\nimport 'node:fs';\nimport 'node:fs/promises';\nimport 'node:path';\nimport 'node:url';\nimport 'node:util';\nimport 'node:perf_hooks';\nimport 'node:module';\nimport 'tty';\nimport 'path';\nimport 'fs';\nimport 'events';\nimport 'assert';\nimport 'util';\nimport 'net';\nimport 'url';\nimport 'http';\nimport 'stream';\nimport 'os';\nimport 'child_process';\nimport 'node:os';\nimport 'node:child_process';\nimport 'node:crypto';\nimport 'node:dns';\nimport 'crypto';\nimport 'node:buffer';\nimport 'module';\nimport 'node:assert';\nimport 'node:process';\nimport 'node:v8';\nimport 'worker_threads';\nimport 'node:http';\nimport 'node:https';\nimport 'zlib';\nimport 'buffer';\nimport 'https';\nimport 'tls';\nimport 'querystring';\nimport 'node:readline';\nimport 'node:zlib';\n\n// This file will be built for both ESM and CJS. Avoid relying on other modules as possible.\n// copy from constants.ts\nconst CSS_LANGS_RE =\n// eslint-disable-next-line regexp/no-unused-capturing-group\n/\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\nconst isCSSRequest = request => CSS_LANGS_RE.test(request);\n// Use splitVendorChunkPlugin() to get the same manualChunks strategy as Vite 2.7\n// We don't recommend using this strategy as a general solution moving forward\n// splitVendorChunk is a simple index/vendor strategy that was used in Vite\n// until v2.8. It is exposed to let people continue to use it in case it was\n// working well for their setups.\n// The cache needs to be reset on buildStart for watch mode to work correctly\n// Don't use this manualChunks strategy for ssr, lib mode, and 'umd' or 'iife'\nclass SplitVendorChunkCache {\n  constructor() {\n    this.cache = new Map();\n  }\n  reset() {\n    this.cache = new Map();\n  }\n}\nfunction splitVendorChunk(options = {}) {\n  const cache = options.cache ?? new SplitVendorChunkCache();\n  return (id, {\n    getModuleInfo\n  }) => {\n    if (isInNodeModules(id) && !isCSSRequest(id) && staticImportedByEntry(id, getModuleInfo, cache.cache)) {\n      return 'vendor';\n    }\n  };\n}\nfunction staticImportedByEntry(id, getModuleInfo, cache, importStack = []) {\n  if (cache.has(id)) {\n    return cache.get(id);\n  }\n  if (importStack.includes(id)) {\n    // circular deps!\n    cache.set(id, false);\n    return false;\n  }\n  const mod = getModuleInfo(id);\n  if (!mod) {\n    cache.set(id, false);\n    return false;\n  }\n  if (mod.isEntry) {\n    cache.set(id, true);\n    return true;\n  }\n  const someImporterIs = mod.importers.some(importer => staticImportedByEntry(importer, getModuleInfo, cache, importStack.concat(id)));\n  cache.set(id, someImporterIs);\n  return someImporterIs;\n}\nfunction splitVendorChunkPlugin() {\n  const caches = [];\n  function createSplitVendorChunk(output, config) {\n    const cache = new SplitVendorChunkCache();\n    caches.push(cache);\n    const build = config.build ?? {};\n    const format = output?.format;\n    if (!build.ssr && !build.lib && format !== 'umd' && format !== 'iife') {\n      return splitVendorChunk({\n        cache\n      });\n    }\n  }\n  return {\n    name: 'vite:split-vendor-chunk',\n    config(config) {\n      let outputs = config?.build?.rollupOptions?.output;\n      if (outputs) {\n        outputs = Array.isArray(outputs) ? outputs : [outputs];\n        for (const output of outputs) {\n          const viteManualChunks = createSplitVendorChunk(output, config);\n          if (viteManualChunks) {\n            if (output.manualChunks) {\n              if (typeof output.manualChunks === 'function') {\n                const userManualChunks = output.manualChunks;\n                output.manualChunks = (id, api) => {\n                  return userManualChunks(id, api) ?? viteManualChunks(id, api);\n                };\n              } else {\n                // else, leave the object form of manualChunks untouched, as\n                // we can't safely replicate rollup handling.\n                // eslint-disable-next-line no-console\n                console.warn(\"(!) the `splitVendorChunk` plugin doesn't have any effect when using the object form of `build.rollupOptions.output.manualChunks`. Consider using the function form instead.\");\n              }\n            } else {\n              output.manualChunks = viteManualChunks;\n            }\n          }\n        }\n      } else {\n        return {\n          build: {\n            rollupOptions: {\n              output: {\n                manualChunks: createSplitVendorChunk({}, config)\n              }\n            }\n          }\n        };\n      }\n    },\n    buildStart() {\n      caches.forEach(cache => cache.reset());\n    }\n  };\n}\nexport { isCSSRequest, splitVendorChunk, splitVendorChunkPlugin };","map":{"version":3,"names":["i","isInNodeModules","b","build","e","buildErrorMessage","v","createFilter","x","createLogger","c","createServer","g","defineConfig","f","formatPostcssSourceMap","k","getDepOptimizationConfig","m","isDepsOptimizerEnabled","z","isFileServingAllowed","l","loadConfigFromFile","A","loadEnv","u","mergeAlias","q","mergeConfig","n","normalizePath","o","optimizeDeps","a","preprocessCSS","p","preview","j","resolveBaseUrl","h","resolveConfig","B","resolveEnvPrefix","d","resolvePackageData","r","resolvePackageEntry","y","searchForWorkspaceRoot","w","send","s","sortUserPlugins","t","transformWithEsbuild","VERSION","version","esbuildVersion","rollupVersion","CSS_LANGS_RE","isCSSRequest","request","test","SplitVendorChunkCache","constructor","cache","Map","reset","splitVendorChunk","options","id","getModuleInfo","staticImportedByEntry","importStack","has","get","includes","set","mod","isEntry","someImporterIs","importers","some","importer","concat","splitVendorChunkPlugin","caches","createSplitVendorChunk","output","config","push","format","ssr","lib","name","outputs","rollupOptions","Array","isArray","viteManualChunks","manualChunks","userManualChunks","api","console","warn","buildStart","forEach"],"sources":["C:/Users/100li/node_modules/vite/dist/node/index.js"],"sourcesContent":["import { i as isInNodeModules } from './chunks/dep-df561101.js';\nexport { b as build, e as buildErrorMessage, v as createFilter, x as createLogger, c as createServer, g as defineConfig, f as formatPostcssSourceMap, k as getDepOptimizationConfig, m as isDepsOptimizerEnabled, z as isFileServingAllowed, l as loadConfigFromFile, A as loadEnv, u as mergeAlias, q as mergeConfig, n as normalizePath, o as optimizeDeps, a as preprocessCSS, p as preview, j as resolveBaseUrl, h as resolveConfig, B as resolveEnvPrefix, d as resolvePackageData, r as resolvePackageEntry, y as searchForWorkspaceRoot, w as send, s as sortUserPlugins, t as transformWithEsbuild } from './chunks/dep-df561101.js';\nexport { VERSION as version } from './constants.js';\nexport { version as esbuildVersion } from 'esbuild';\nexport { VERSION as rollupVersion } from 'rollup';\nimport 'node:fs';\nimport 'node:fs/promises';\nimport 'node:path';\nimport 'node:url';\nimport 'node:util';\nimport 'node:perf_hooks';\nimport 'node:module';\nimport 'tty';\nimport 'path';\nimport 'fs';\nimport 'events';\nimport 'assert';\nimport 'util';\nimport 'net';\nimport 'url';\nimport 'http';\nimport 'stream';\nimport 'os';\nimport 'child_process';\nimport 'node:os';\nimport 'node:child_process';\nimport 'node:crypto';\nimport 'node:dns';\nimport 'crypto';\nimport 'node:buffer';\nimport 'module';\nimport 'node:assert';\nimport 'node:process';\nimport 'node:v8';\nimport 'worker_threads';\nimport 'node:http';\nimport 'node:https';\nimport 'zlib';\nimport 'buffer';\nimport 'https';\nimport 'tls';\nimport 'querystring';\nimport 'node:readline';\nimport 'node:zlib';\n\n// This file will be built for both ESM and CJS. Avoid relying on other modules as possible.\n// copy from constants.ts\nconst CSS_LANGS_RE = \n// eslint-disable-next-line regexp/no-unused-capturing-group\n/\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\nconst isCSSRequest = (request) => CSS_LANGS_RE.test(request);\n// Use splitVendorChunkPlugin() to get the same manualChunks strategy as Vite 2.7\n// We don't recommend using this strategy as a general solution moving forward\n// splitVendorChunk is a simple index/vendor strategy that was used in Vite\n// until v2.8. It is exposed to let people continue to use it in case it was\n// working well for their setups.\n// The cache needs to be reset on buildStart for watch mode to work correctly\n// Don't use this manualChunks strategy for ssr, lib mode, and 'umd' or 'iife'\nclass SplitVendorChunkCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    reset() {\n        this.cache = new Map();\n    }\n}\nfunction splitVendorChunk(options = {}) {\n    const cache = options.cache ?? new SplitVendorChunkCache();\n    return (id, { getModuleInfo }) => {\n        if (isInNodeModules(id) &&\n            !isCSSRequest(id) &&\n            staticImportedByEntry(id, getModuleInfo, cache.cache)) {\n            return 'vendor';\n        }\n    };\n}\nfunction staticImportedByEntry(id, getModuleInfo, cache, importStack = []) {\n    if (cache.has(id)) {\n        return cache.get(id);\n    }\n    if (importStack.includes(id)) {\n        // circular deps!\n        cache.set(id, false);\n        return false;\n    }\n    const mod = getModuleInfo(id);\n    if (!mod) {\n        cache.set(id, false);\n        return false;\n    }\n    if (mod.isEntry) {\n        cache.set(id, true);\n        return true;\n    }\n    const someImporterIs = mod.importers.some((importer) => staticImportedByEntry(importer, getModuleInfo, cache, importStack.concat(id)));\n    cache.set(id, someImporterIs);\n    return someImporterIs;\n}\nfunction splitVendorChunkPlugin() {\n    const caches = [];\n    function createSplitVendorChunk(output, config) {\n        const cache = new SplitVendorChunkCache();\n        caches.push(cache);\n        const build = config.build ?? {};\n        const format = output?.format;\n        if (!build.ssr && !build.lib && format !== 'umd' && format !== 'iife') {\n            return splitVendorChunk({ cache });\n        }\n    }\n    return {\n        name: 'vite:split-vendor-chunk',\n        config(config) {\n            let outputs = config?.build?.rollupOptions?.output;\n            if (outputs) {\n                outputs = Array.isArray(outputs) ? outputs : [outputs];\n                for (const output of outputs) {\n                    const viteManualChunks = createSplitVendorChunk(output, config);\n                    if (viteManualChunks) {\n                        if (output.manualChunks) {\n                            if (typeof output.manualChunks === 'function') {\n                                const userManualChunks = output.manualChunks;\n                                output.manualChunks = (id, api) => {\n                                    return userManualChunks(id, api) ?? viteManualChunks(id, api);\n                                };\n                            }\n                            else {\n                                // else, leave the object form of manualChunks untouched, as\n                                // we can't safely replicate rollup handling.\n                                // eslint-disable-next-line no-console\n                                console.warn(\"(!) the `splitVendorChunk` plugin doesn't have any effect when using the object form of `build.rollupOptions.output.manualChunks`. Consider using the function form instead.\");\n                            }\n                        }\n                        else {\n                            output.manualChunks = viteManualChunks;\n                        }\n                    }\n                }\n            }\n            else {\n                return {\n                    build: {\n                        rollupOptions: {\n                            output: {\n                                manualChunks: createSplitVendorChunk({}, config),\n                            },\n                        },\n                    },\n                };\n            }\n        },\n        buildStart() {\n            caches.forEach((cache) => cache.reset());\n        },\n    };\n}\n\nexport { isCSSRequest, splitVendorChunk, splitVendorChunkPlugin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}