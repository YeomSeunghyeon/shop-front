{"ast":null,"code":"import { fileURLToPath as __cjs_fileURLToPath } from 'node:url';\nimport { dirname as __cjs_dirname } from 'node:path';\nimport { createRequire as __cjs_createRequire } from 'node:module';\nconst __filename = __cjs_fileURLToPath(import.meta.url);\nconst __dirname = __cjs_dirname(__filename);\nconst require = __cjs_createRequire(import.meta.url);\nconst __require = require;\nconst UNDEFINED_CODE_POINTS = new Set([65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111]);\nconst REPLACEMENT_CHARACTER = '\\uFFFD';\nvar CODE_POINTS;\n(function (CODE_POINTS) {\n  CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n  CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n  CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n  CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n  CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n  CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n  CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n  CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n  CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n  CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n  CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n  CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n  CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n  CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n  CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n  CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n  CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n  CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n  CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n  CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nconst SEQUENCES = {\n  DASH_DASH: '--',\n  CDATA_START: '[CDATA[',\n  DOCTYPE: 'doctype',\n  SCRIPT: 'script',\n  PUBLIC: 'public',\n  SYSTEM: 'system'\n};\n//Surrogates\nfunction isSurrogate(cp) {\n  return cp >= 55296 && cp <= 57343;\n}\nfunction isSurrogatePair(cp) {\n  return cp >= 56320 && cp <= 57343;\n}\nfunction getSurrogatePairCodePoint(cp1, cp2) {\n  return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nfunction isControlCodePoint(cp) {\n  return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;\n}\nfunction isUndefinedCodePoint(cp) {\n  return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);\n}\nvar ERR;\n(function (ERR) {\n  ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n  ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n  ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n  ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n  ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n  ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n  ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n  ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n  ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n  ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n  ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n  ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n  ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n  ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n  ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n  ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n  ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n  ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n  ERR[\"eofInTag\"] = \"eof-in-tag\";\n  ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n  ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n  ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n  ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n  ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n  ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n  ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n  ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n  ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n  ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n  ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n  ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n  ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n  ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n  ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n  ERR[\"nestedComment\"] = \"nested-comment\";\n  ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n  ERR[\"eofInComment\"] = \"eof-in-comment\";\n  ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n  ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n  ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n  ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n  ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n  ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n  ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n  ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n  ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n  ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n  ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n  ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n  ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n  ERR[\"missingDoctype\"] = \"missing-doctype\";\n  ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n  ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n  ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n  ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n  ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n  ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n  ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n  ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n  ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n  constructor(handler) {\n    this.handler = handler;\n    this.html = '';\n    this.pos = -1;\n    // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n    this.lastGapPos = -2;\n    this.gapStack = [];\n    this.skipNextNewLine = false;\n    this.lastChunkWritten = false;\n    this.endOfChunkHit = false;\n    this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n    this.isEol = false;\n    this.lineStartPos = 0;\n    this.droppedBufferSize = 0;\n    this.line = 1;\n    //NOTE: avoid reporting errors twice on advance/retreat\n    this.lastErrOffset = -1;\n  }\n  /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n  get col() {\n    return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n  }\n  get offset() {\n    return this.droppedBufferSize + this.pos;\n  }\n  getError(code) {\n    const {\n      line,\n      col,\n      offset\n    } = this;\n    return {\n      code,\n      startLine: line,\n      endLine: line,\n      startCol: col,\n      endCol: col,\n      startOffset: offset,\n      endOffset: offset\n    };\n  }\n  _err(code) {\n    if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n      this.lastErrOffset = this.offset;\n      this.handler.onParseError(this.getError(code));\n    }\n  }\n  _addGap() {\n    this.gapStack.push(this.lastGapPos);\n    this.lastGapPos = this.pos;\n  }\n  _processSurrogate(cp) {\n    //NOTE: try to peek a surrogate pair\n    if (this.pos !== this.html.length - 1) {\n      const nextCp = this.html.charCodeAt(this.pos + 1);\n      if (isSurrogatePair(nextCp)) {\n        //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n        this.pos++;\n        //NOTE: add a gap that should be avoided during retreat\n        this._addGap();\n        return getSurrogatePairCodePoint(cp, nextCp);\n      }\n    }\n    //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n    else if (!this.lastChunkWritten) {\n      this.endOfChunkHit = true;\n      return CODE_POINTS.EOF;\n    }\n    //NOTE: isolated surrogate\n    this._err(ERR.surrogateInInputStream);\n    return cp;\n  }\n  willDropParsedChunk() {\n    return this.pos > this.bufferWaterline;\n  }\n  dropParsedChunk() {\n    if (this.willDropParsedChunk()) {\n      this.html = this.html.substring(this.pos);\n      this.lineStartPos -= this.pos;\n      this.droppedBufferSize += this.pos;\n      this.pos = 0;\n      this.lastGapPos = -2;\n      this.gapStack.length = 0;\n    }\n  }\n  write(chunk, isLastChunk) {\n    if (this.html.length > 0) {\n      this.html += chunk;\n    } else {\n      this.html = chunk;\n    }\n    this.endOfChunkHit = false;\n    this.lastChunkWritten = isLastChunk;\n  }\n  insertHtmlAtCurrentPos(chunk) {\n    this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n    this.endOfChunkHit = false;\n  }\n  startsWith(pattern, caseSensitive) {\n    // Check if our buffer has enough characters\n    if (this.pos + pattern.length > this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return false;\n    }\n    if (caseSensitive) {\n      return this.html.startsWith(pattern, this.pos);\n    }\n    for (let i = 0; i < pattern.length; i++) {\n      const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n      if (cp !== pattern.charCodeAt(i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  peek(offset) {\n    const pos = this.pos + offset;\n    if (pos >= this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return CODE_POINTS.EOF;\n    }\n    const code = this.html.charCodeAt(pos);\n    return code === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code;\n  }\n  advance() {\n    this.pos++;\n    //NOTE: LF should be in the last column of the line\n    if (this.isEol) {\n      this.isEol = false;\n      this.line++;\n      this.lineStartPos = this.pos;\n    }\n    if (this.pos >= this.html.length) {\n      this.endOfChunkHit = !this.lastChunkWritten;\n      return CODE_POINTS.EOF;\n    }\n    let cp = this.html.charCodeAt(this.pos);\n    //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n    if (cp === CODE_POINTS.CARRIAGE_RETURN) {\n      this.isEol = true;\n      this.skipNextNewLine = true;\n      return CODE_POINTS.LINE_FEED;\n    }\n    //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n    //must be ignored.\n    if (cp === CODE_POINTS.LINE_FEED) {\n      this.isEol = true;\n      if (this.skipNextNewLine) {\n        // `line` will be bumped again in the recursive call.\n        this.line--;\n        this.skipNextNewLine = false;\n        this._addGap();\n        return this.advance();\n      }\n    }\n    this.skipNextNewLine = false;\n    if (isSurrogate(cp)) {\n      cp = this._processSurrogate(cp);\n    }\n    //OPTIMIZATION: first check if code point is in the common allowed\n    //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n    //before going into detailed performance cost validation.\n    const isCommonValidRange = this.handler.onParseError === null || cp > 0x1f && cp < 0x7f || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.CARRIAGE_RETURN || cp > 0x9f && cp < 64976;\n    if (!isCommonValidRange) {\n      this._checkForProblematicCharacters(cp);\n    }\n    return cp;\n  }\n  _checkForProblematicCharacters(cp) {\n    if (isControlCodePoint(cp)) {\n      this._err(ERR.controlCharacterInInputStream);\n    } else if (isUndefinedCodePoint(cp)) {\n      this._err(ERR.noncharacterInInputStream);\n    }\n  }\n  retreat(count) {\n    this.pos -= count;\n    while (this.pos < this.lastGapPos) {\n      this.lastGapPos = this.gapStack.pop();\n      this.pos--;\n    }\n    this.isEol = false;\n  }\n}\nvar TokenType;\n(function (TokenType) {\n  TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n  TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n  TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n  TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n  TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n  TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n  TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n  TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n  TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nfunction getTokenAttr(token, attrName) {\n  for (let i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) {\n      return token.attrs[i].value;\n    }\n  }\n  return null;\n}\n\n// Generated using scripts/write-decode-map.ts\nvar htmlDecodeTree = new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\".split(\"\").map(c => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nnew Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\".split(\"\").map(c => c.charCodeAt(0)));\nvar CharCodes;\n(function (CharCodes) {\n  CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n  CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n  CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n  CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n  CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n  CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n  CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n  /** Bit that needs to be set to convert an upper case ASCII character to lower case */\n  CharCodes[CharCodes[\"To_LOWER_BIT\"] = 32] = \"To_LOWER_BIT\";\n})(CharCodes || (CharCodes = {}));\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n  BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n  BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n  const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n  const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n  // Case 1: Single branch encoded in jump offset\n  if (branchCount === 0) {\n    return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n  }\n  // Case 2: Multiple branches encoded in jump table\n  if (jumpOffset) {\n    const value = char - jumpOffset;\n    return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;\n  }\n  // Case 3: Multiple branches encoded in dictionary\n  // Binary search for the character.\n  let lo = nodeIdx;\n  let hi = lo + branchCount - 1;\n  while (lo <= hi) {\n    const mid = lo + hi >>> 1;\n    const midVal = decodeTree[mid];\n    if (midVal < char) {\n      lo = mid + 1;\n    } else if (midVal > char) {\n      hi = mid - 1;\n    } else {\n      return decodeTree[mid + branchCount];\n    }\n  }\n  return -1;\n}\n\n/** All valid namespaces in HTML. */\nvar NS;\n(function (NS) {\n  NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n  NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n  NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n  NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n  NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n  NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nvar ATTRS;\n(function (ATTRS) {\n  ATTRS[\"TYPE\"] = \"type\";\n  ATTRS[\"ACTION\"] = \"action\";\n  ATTRS[\"ENCODING\"] = \"encoding\";\n  ATTRS[\"PROMPT\"] = \"prompt\";\n  ATTRS[\"NAME\"] = \"name\";\n  ATTRS[\"COLOR\"] = \"color\";\n  ATTRS[\"FACE\"] = \"face\";\n  ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nvar DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n  DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n  DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n  DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nvar TAG_NAMES;\n(function (TAG_NAMES) {\n  TAG_NAMES[\"A\"] = \"a\";\n  TAG_NAMES[\"ADDRESS\"] = \"address\";\n  TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n  TAG_NAMES[\"APPLET\"] = \"applet\";\n  TAG_NAMES[\"AREA\"] = \"area\";\n  TAG_NAMES[\"ARTICLE\"] = \"article\";\n  TAG_NAMES[\"ASIDE\"] = \"aside\";\n  TAG_NAMES[\"B\"] = \"b\";\n  TAG_NAMES[\"BASE\"] = \"base\";\n  TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n  TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n  TAG_NAMES[\"BIG\"] = \"big\";\n  TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n  TAG_NAMES[\"BODY\"] = \"body\";\n  TAG_NAMES[\"BR\"] = \"br\";\n  TAG_NAMES[\"BUTTON\"] = \"button\";\n  TAG_NAMES[\"CAPTION\"] = \"caption\";\n  TAG_NAMES[\"CENTER\"] = \"center\";\n  TAG_NAMES[\"CODE\"] = \"code\";\n  TAG_NAMES[\"COL\"] = \"col\";\n  TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n  TAG_NAMES[\"DD\"] = \"dd\";\n  TAG_NAMES[\"DESC\"] = \"desc\";\n  TAG_NAMES[\"DETAILS\"] = \"details\";\n  TAG_NAMES[\"DIALOG\"] = \"dialog\";\n  TAG_NAMES[\"DIR\"] = \"dir\";\n  TAG_NAMES[\"DIV\"] = \"div\";\n  TAG_NAMES[\"DL\"] = \"dl\";\n  TAG_NAMES[\"DT\"] = \"dt\";\n  TAG_NAMES[\"EM\"] = \"em\";\n  TAG_NAMES[\"EMBED\"] = \"embed\";\n  TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n  TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n  TAG_NAMES[\"FIGURE\"] = \"figure\";\n  TAG_NAMES[\"FONT\"] = \"font\";\n  TAG_NAMES[\"FOOTER\"] = \"footer\";\n  TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n  TAG_NAMES[\"FORM\"] = \"form\";\n  TAG_NAMES[\"FRAME\"] = \"frame\";\n  TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n  TAG_NAMES[\"H1\"] = \"h1\";\n  TAG_NAMES[\"H2\"] = \"h2\";\n  TAG_NAMES[\"H3\"] = \"h3\";\n  TAG_NAMES[\"H4\"] = \"h4\";\n  TAG_NAMES[\"H5\"] = \"h5\";\n  TAG_NAMES[\"H6\"] = \"h6\";\n  TAG_NAMES[\"HEAD\"] = \"head\";\n  TAG_NAMES[\"HEADER\"] = \"header\";\n  TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n  TAG_NAMES[\"HR\"] = \"hr\";\n  TAG_NAMES[\"HTML\"] = \"html\";\n  TAG_NAMES[\"I\"] = \"i\";\n  TAG_NAMES[\"IMG\"] = \"img\";\n  TAG_NAMES[\"IMAGE\"] = \"image\";\n  TAG_NAMES[\"INPUT\"] = \"input\";\n  TAG_NAMES[\"IFRAME\"] = \"iframe\";\n  TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n  TAG_NAMES[\"LABEL\"] = \"label\";\n  TAG_NAMES[\"LI\"] = \"li\";\n  TAG_NAMES[\"LINK\"] = \"link\";\n  TAG_NAMES[\"LISTING\"] = \"listing\";\n  TAG_NAMES[\"MAIN\"] = \"main\";\n  TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n  TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n  TAG_NAMES[\"MATH\"] = \"math\";\n  TAG_NAMES[\"MENU\"] = \"menu\";\n  TAG_NAMES[\"META\"] = \"meta\";\n  TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n  TAG_NAMES[\"MI\"] = \"mi\";\n  TAG_NAMES[\"MO\"] = \"mo\";\n  TAG_NAMES[\"MN\"] = \"mn\";\n  TAG_NAMES[\"MS\"] = \"ms\";\n  TAG_NAMES[\"MTEXT\"] = \"mtext\";\n  TAG_NAMES[\"NAV\"] = \"nav\";\n  TAG_NAMES[\"NOBR\"] = \"nobr\";\n  TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n  TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n  TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES[\"OBJECT\"] = \"object\";\n  TAG_NAMES[\"OL\"] = \"ol\";\n  TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n  TAG_NAMES[\"OPTION\"] = \"option\";\n  TAG_NAMES[\"P\"] = \"p\";\n  TAG_NAMES[\"PARAM\"] = \"param\";\n  TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n  TAG_NAMES[\"PRE\"] = \"pre\";\n  TAG_NAMES[\"RB\"] = \"rb\";\n  TAG_NAMES[\"RP\"] = \"rp\";\n  TAG_NAMES[\"RT\"] = \"rt\";\n  TAG_NAMES[\"RTC\"] = \"rtc\";\n  TAG_NAMES[\"RUBY\"] = \"ruby\";\n  TAG_NAMES[\"S\"] = \"s\";\n  TAG_NAMES[\"SCRIPT\"] = \"script\";\n  TAG_NAMES[\"SECTION\"] = \"section\";\n  TAG_NAMES[\"SELECT\"] = \"select\";\n  TAG_NAMES[\"SOURCE\"] = \"source\";\n  TAG_NAMES[\"SMALL\"] = \"small\";\n  TAG_NAMES[\"SPAN\"] = \"span\";\n  TAG_NAMES[\"STRIKE\"] = \"strike\";\n  TAG_NAMES[\"STRONG\"] = \"strong\";\n  TAG_NAMES[\"STYLE\"] = \"style\";\n  TAG_NAMES[\"SUB\"] = \"sub\";\n  TAG_NAMES[\"SUMMARY\"] = \"summary\";\n  TAG_NAMES[\"SUP\"] = \"sup\";\n  TAG_NAMES[\"TABLE\"] = \"table\";\n  TAG_NAMES[\"TBODY\"] = \"tbody\";\n  TAG_NAMES[\"TEMPLATE\"] = \"template\";\n  TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n  TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n  TAG_NAMES[\"TD\"] = \"td\";\n  TAG_NAMES[\"TH\"] = \"th\";\n  TAG_NAMES[\"THEAD\"] = \"thead\";\n  TAG_NAMES[\"TITLE\"] = \"title\";\n  TAG_NAMES[\"TR\"] = \"tr\";\n  TAG_NAMES[\"TRACK\"] = \"track\";\n  TAG_NAMES[\"TT\"] = \"tt\";\n  TAG_NAMES[\"U\"] = \"u\";\n  TAG_NAMES[\"UL\"] = \"ul\";\n  TAG_NAMES[\"SVG\"] = \"svg\";\n  TAG_NAMES[\"VAR\"] = \"var\";\n  TAG_NAMES[\"WBR\"] = \"wbr\";\n  TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nvar TAG_ID;\n(function (TAG_ID) {\n  TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n  TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n  TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n  TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n  TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n  TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n  TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n  TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n  TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n  TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n  TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n  TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n  TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n  TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n  TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n  TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n  TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n  TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n  TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n  TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n  TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n  TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n  TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n  TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n  TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n  TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n  TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n  TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n  TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n  TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n  TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n  TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n  TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n  TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n  TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n  TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n  TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n  TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n  TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n  TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n  TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n  TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n  TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n  TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n  TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n  TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n  TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n  TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n  TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n  TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n  TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n  TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n  TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n  TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n  TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n  TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n  TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n  TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n  TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n  TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n  TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n  TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n  TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n  TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n  TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n  TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n  TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n  TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n  TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n  TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n  TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n  TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n  TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n  TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n  TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n  TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n  TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n  TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n  TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n  TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n  TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n  TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n  TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n  TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n  TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n  TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n  TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n  TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n  TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n  TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n  TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n  TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n  TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n  TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n  TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n  TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n  TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n  TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n  TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n  TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n  TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n  TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n  TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n  TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n  TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n  TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n  TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n  TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n  TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n  TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n  TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n  TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n  TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n  TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n  TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n  TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n  TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n  TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n  TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n  TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n  TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n  TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([[TAG_NAMES.A, TAG_ID.A], [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS], [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML], [TAG_NAMES.APPLET, TAG_ID.APPLET], [TAG_NAMES.AREA, TAG_ID.AREA], [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE], [TAG_NAMES.ASIDE, TAG_ID.ASIDE], [TAG_NAMES.B, TAG_ID.B], [TAG_NAMES.BASE, TAG_ID.BASE], [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT], [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND], [TAG_NAMES.BIG, TAG_ID.BIG], [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE], [TAG_NAMES.BODY, TAG_ID.BODY], [TAG_NAMES.BR, TAG_ID.BR], [TAG_NAMES.BUTTON, TAG_ID.BUTTON], [TAG_NAMES.CAPTION, TAG_ID.CAPTION], [TAG_NAMES.CENTER, TAG_ID.CENTER], [TAG_NAMES.CODE, TAG_ID.CODE], [TAG_NAMES.COL, TAG_ID.COL], [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP], [TAG_NAMES.DD, TAG_ID.DD], [TAG_NAMES.DESC, TAG_ID.DESC], [TAG_NAMES.DETAILS, TAG_ID.DETAILS], [TAG_NAMES.DIALOG, TAG_ID.DIALOG], [TAG_NAMES.DIR, TAG_ID.DIR], [TAG_NAMES.DIV, TAG_ID.DIV], [TAG_NAMES.DL, TAG_ID.DL], [TAG_NAMES.DT, TAG_ID.DT], [TAG_NAMES.EM, TAG_ID.EM], [TAG_NAMES.EMBED, TAG_ID.EMBED], [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET], [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION], [TAG_NAMES.FIGURE, TAG_ID.FIGURE], [TAG_NAMES.FONT, TAG_ID.FONT], [TAG_NAMES.FOOTER, TAG_ID.FOOTER], [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT], [TAG_NAMES.FORM, TAG_ID.FORM], [TAG_NAMES.FRAME, TAG_ID.FRAME], [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET], [TAG_NAMES.H1, TAG_ID.H1], [TAG_NAMES.H2, TAG_ID.H2], [TAG_NAMES.H3, TAG_ID.H3], [TAG_NAMES.H4, TAG_ID.H4], [TAG_NAMES.H5, TAG_ID.H5], [TAG_NAMES.H6, TAG_ID.H6], [TAG_NAMES.HEAD, TAG_ID.HEAD], [TAG_NAMES.HEADER, TAG_ID.HEADER], [TAG_NAMES.HGROUP, TAG_ID.HGROUP], [TAG_NAMES.HR, TAG_ID.HR], [TAG_NAMES.HTML, TAG_ID.HTML], [TAG_NAMES.I, TAG_ID.I], [TAG_NAMES.IMG, TAG_ID.IMG], [TAG_NAMES.IMAGE, TAG_ID.IMAGE], [TAG_NAMES.INPUT, TAG_ID.INPUT], [TAG_NAMES.IFRAME, TAG_ID.IFRAME], [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN], [TAG_NAMES.LABEL, TAG_ID.LABEL], [TAG_NAMES.LI, TAG_ID.LI], [TAG_NAMES.LINK, TAG_ID.LINK], [TAG_NAMES.LISTING, TAG_ID.LISTING], [TAG_NAMES.MAIN, TAG_ID.MAIN], [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK], [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE], [TAG_NAMES.MATH, TAG_ID.MATH], [TAG_NAMES.MENU, TAG_ID.MENU], [TAG_NAMES.META, TAG_ID.META], [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH], [TAG_NAMES.MI, TAG_ID.MI], [TAG_NAMES.MO, TAG_ID.MO], [TAG_NAMES.MN, TAG_ID.MN], [TAG_NAMES.MS, TAG_ID.MS], [TAG_NAMES.MTEXT, TAG_ID.MTEXT], [TAG_NAMES.NAV, TAG_ID.NAV], [TAG_NAMES.NOBR, TAG_ID.NOBR], [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES], [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED], [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT], [TAG_NAMES.OBJECT, TAG_ID.OBJECT], [TAG_NAMES.OL, TAG_ID.OL], [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP], [TAG_NAMES.OPTION, TAG_ID.OPTION], [TAG_NAMES.P, TAG_ID.P], [TAG_NAMES.PARAM, TAG_ID.PARAM], [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT], [TAG_NAMES.PRE, TAG_ID.PRE], [TAG_NAMES.RB, TAG_ID.RB], [TAG_NAMES.RP, TAG_ID.RP], [TAG_NAMES.RT, TAG_ID.RT], [TAG_NAMES.RTC, TAG_ID.RTC], [TAG_NAMES.RUBY, TAG_ID.RUBY], [TAG_NAMES.S, TAG_ID.S], [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT], [TAG_NAMES.SECTION, TAG_ID.SECTION], [TAG_NAMES.SELECT, TAG_ID.SELECT], [TAG_NAMES.SOURCE, TAG_ID.SOURCE], [TAG_NAMES.SMALL, TAG_ID.SMALL], [TAG_NAMES.SPAN, TAG_ID.SPAN], [TAG_NAMES.STRIKE, TAG_ID.STRIKE], [TAG_NAMES.STRONG, TAG_ID.STRONG], [TAG_NAMES.STYLE, TAG_ID.STYLE], [TAG_NAMES.SUB, TAG_ID.SUB], [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY], [TAG_NAMES.SUP, TAG_ID.SUP], [TAG_NAMES.TABLE, TAG_ID.TABLE], [TAG_NAMES.TBODY, TAG_ID.TBODY], [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE], [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA], [TAG_NAMES.TFOOT, TAG_ID.TFOOT], [TAG_NAMES.TD, TAG_ID.TD], [TAG_NAMES.TH, TAG_ID.TH], [TAG_NAMES.THEAD, TAG_ID.THEAD], [TAG_NAMES.TITLE, TAG_ID.TITLE], [TAG_NAMES.TR, TAG_ID.TR], [TAG_NAMES.TRACK, TAG_ID.TRACK], [TAG_NAMES.TT, TAG_ID.TT], [TAG_NAMES.U, TAG_ID.U], [TAG_NAMES.UL, TAG_ID.UL], [TAG_NAMES.SVG, TAG_ID.SVG], [TAG_NAMES.VAR, TAG_ID.VAR], [TAG_NAMES.WBR, TAG_ID.WBR], [TAG_NAMES.XMP, TAG_ID.XMP]]);\nfunction getTagID(tagName) {\n  var _a;\n  return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nconst SPECIAL_ELEMENTS = {\n  [NS.HTML]: new Set([$.ADDRESS, $.APPLET, $.AREA, $.ARTICLE, $.ASIDE, $.BASE, $.BASEFONT, $.BGSOUND, $.BLOCKQUOTE, $.BODY, $.BR, $.BUTTON, $.CAPTION, $.CENTER, $.COL, $.COLGROUP, $.DD, $.DETAILS, $.DIR, $.DIV, $.DL, $.DT, $.EMBED, $.FIELDSET, $.FIGCAPTION, $.FIGURE, $.FOOTER, $.FORM, $.FRAME, $.FRAMESET, $.H1, $.H2, $.H3, $.H4, $.H5, $.H6, $.HEAD, $.HEADER, $.HGROUP, $.HR, $.HTML, $.IFRAME, $.IMG, $.INPUT, $.LI, $.LINK, $.LISTING, $.MAIN, $.MARQUEE, $.MENU, $.META, $.NAV, $.NOEMBED, $.NOFRAMES, $.NOSCRIPT, $.OBJECT, $.OL, $.P, $.PARAM, $.PLAINTEXT, $.PRE, $.SCRIPT, $.SECTION, $.SELECT, $.SOURCE, $.STYLE, $.SUMMARY, $.TABLE, $.TBODY, $.TD, $.TEMPLATE, $.TEXTAREA, $.TFOOT, $.TH, $.THEAD, $.TITLE, $.TR, $.TRACK, $.UL, $.WBR, $.XMP]),\n  [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n  [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n  [NS.XLINK]: new Set(),\n  [NS.XML]: new Set(),\n  [NS.XMLNS]: new Set()\n};\nfunction isNumberedHeader(tn) {\n  return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([[0x80, 8364], [0x82, 8218], [0x83, 402], [0x84, 8222], [0x85, 8230], [0x86, 8224], [0x87, 8225], [0x88, 710], [0x89, 8240], [0x8a, 352], [0x8b, 8249], [0x8c, 338], [0x8e, 381], [0x91, 8216], [0x92, 8217], [0x93, 8220], [0x94, 8221], [0x95, 8226], [0x96, 8211], [0x97, 8212], [0x98, 732], [0x99, 8482], [0x9a, 353], [0x9b, 8250], [0x9c, 339], [0x9e, 382], [0x9f, 376]]);\n//States\nvar State;\n(function (State) {\n  State[State[\"DATA\"] = 0] = \"DATA\";\n  State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n  State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n  State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n  State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n  State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n  State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n  State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n  State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n  State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n  State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n  State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n  State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n  State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n  State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n  State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n  State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n  State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n  State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n  State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n  State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n  State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n  State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n  State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n  State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n  State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n  State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n  State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n  State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n  State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n  State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n  State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n  State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n  State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n  State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n  State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n  State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n  State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n  State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n  State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n  State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n  State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n  State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n  State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n  State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n  State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n  State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n  State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n  State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n  State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n  State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n  State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n  State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n  State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n  State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n  State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n  State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n  State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n  State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n  State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n  State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n  State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n  State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n  State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n  State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n  State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nconst TokenizerMode = {\n  DATA: State.DATA,\n  RCDATA: State.RCDATA,\n  RAWTEXT: State.RAWTEXT,\n  SCRIPT_DATA: State.SCRIPT_DATA,\n  PLAINTEXT: State.PLAINTEXT,\n  CDATA_SECTION: State.CDATA_SECTION\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n  return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n  return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n  return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n  return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n  return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n  return cp + 32;\n}\nfunction isWhitespace(cp) {\n  return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n  return nextCp === CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n  return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;\n}\n//Tokenizer\nclass Tokenizer {\n  constructor(options, handler) {\n    this.options = options;\n    this.handler = handler;\n    this.paused = false;\n    /** Ensures that the parsing loop isn't run multiple times at once. */\n    this.inLoop = false;\n    /**\n     * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n     * and that it is not an integration point for either MathML or HTML.\n     *\n     * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n     */\n    this.inForeignNode = false;\n    this.lastStartTagName = '';\n    this.active = false;\n    this.state = State.DATA;\n    this.returnState = State.DATA;\n    this.charRefCode = -1;\n    this.consumedAfterSnapshot = -1;\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = {\n      name: '',\n      value: ''\n    };\n    this.preprocessor = new Preprocessor(handler);\n    this.currentLocation = this.getCurrentLocation(-1);\n  }\n  //Errors\n  _err(code) {\n    var _a, _b;\n    (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n  }\n  // NOTE: `offset` may never run across line boundaries.\n  getCurrentLocation(offset) {\n    if (!this.options.sourceCodeLocationInfo) {\n      return null;\n    }\n    return {\n      startLine: this.preprocessor.line,\n      startCol: this.preprocessor.col - offset,\n      startOffset: this.preprocessor.offset - offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    };\n  }\n  _runParsingLoop() {\n    if (this.inLoop) return;\n    this.inLoop = true;\n    while (this.active && !this.paused) {\n      this.consumedAfterSnapshot = 0;\n      const cp = this._consume();\n      if (!this._ensureHibernation()) {\n        this._callState(cp);\n      }\n    }\n    this.inLoop = false;\n  }\n  //API\n  pause() {\n    this.paused = true;\n  }\n  resume(writeCallback) {\n    if (!this.paused) {\n      throw new Error('Parser was already resumed');\n    }\n    this.paused = false;\n    // Necessary for synchronous resume.\n    if (this.inLoop) return;\n    this._runParsingLoop();\n    if (!this.paused) {\n      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n    }\n  }\n  write(chunk, isLastChunk, writeCallback) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n    this._runParsingLoop();\n    if (!this.paused) {\n      writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n    }\n  }\n  insertHtmlAtCurrentPos(chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n    this._runParsingLoop();\n  }\n  //Hibernation\n  _ensureHibernation() {\n    if (this.preprocessor.endOfChunkHit) {\n      this._unconsume(this.consumedAfterSnapshot);\n      this.active = false;\n      return true;\n    }\n    return false;\n  }\n  //Consumption\n  _consume() {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n  }\n  _unconsume(count) {\n    this.consumedAfterSnapshot -= count;\n    this.preprocessor.retreat(count);\n  }\n  _reconsumeInState(state, cp) {\n    this.state = state;\n    this._callState(cp);\n  }\n  _advanceBy(count) {\n    this.consumedAfterSnapshot += count;\n    for (let i = 0; i < count; i++) {\n      this.preprocessor.advance();\n    }\n  }\n  _consumeSequenceIfMatch(pattern, caseSensitive) {\n    if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n      // We will already have consumed one character before calling this method.\n      this._advanceBy(pattern.length - 1);\n      return true;\n    }\n    return false;\n  }\n  //Token creation\n  _createStartTagToken() {\n    this.currentToken = {\n      type: TokenType.START_TAG,\n      tagName: '',\n      tagID: TAG_ID.UNKNOWN,\n      selfClosing: false,\n      ackSelfClosing: false,\n      attrs: [],\n      location: this.getCurrentLocation(1)\n    };\n  }\n  _createEndTagToken() {\n    this.currentToken = {\n      type: TokenType.END_TAG,\n      tagName: '',\n      tagID: TAG_ID.UNKNOWN,\n      selfClosing: false,\n      ackSelfClosing: false,\n      attrs: [],\n      location: this.getCurrentLocation(2)\n    };\n  }\n  _createCommentToken(offset) {\n    this.currentToken = {\n      type: TokenType.COMMENT,\n      data: '',\n      location: this.getCurrentLocation(offset)\n    };\n  }\n  _createDoctypeToken(initialName) {\n    this.currentToken = {\n      type: TokenType.DOCTYPE,\n      name: initialName,\n      forceQuirks: false,\n      publicId: null,\n      systemId: null,\n      location: this.currentLocation\n    };\n  }\n  _createCharacterToken(type, chars) {\n    this.currentCharacterToken = {\n      type,\n      chars,\n      location: this.currentLocation\n    };\n  }\n  //Tag attributes\n  _createAttr(attrNameFirstCh) {\n    this.currentAttr = {\n      name: attrNameFirstCh,\n      value: ''\n    };\n    this.currentLocation = this.getCurrentLocation(0);\n  }\n  _leaveAttrName() {\n    var _a;\n    var _b;\n    const token = this.currentToken;\n    if (getTokenAttr(token, this.currentAttr.name) === null) {\n      token.attrs.push(this.currentAttr);\n      if (token.location && this.currentLocation) {\n        const attrLocations = (_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : _b.attrs = Object.create(null);\n        attrLocations[this.currentAttr.name] = this.currentLocation;\n        // Set end location\n        this._leaveAttrValue();\n      }\n    } else {\n      this._err(ERR.duplicateAttribute);\n    }\n  }\n  _leaveAttrValue() {\n    if (this.currentLocation) {\n      this.currentLocation.endLine = this.preprocessor.line;\n      this.currentLocation.endCol = this.preprocessor.col;\n      this.currentLocation.endOffset = this.preprocessor.offset;\n    }\n  }\n  //Token emission\n  prepareToken(ct) {\n    this._emitCurrentCharacterToken(ct.location);\n    this.currentToken = null;\n    if (ct.location) {\n      ct.location.endLine = this.preprocessor.line;\n      ct.location.endCol = this.preprocessor.col + 1;\n      ct.location.endOffset = this.preprocessor.offset + 1;\n    }\n    this.currentLocation = this.getCurrentLocation(-1);\n  }\n  emitCurrentTagToken() {\n    const ct = this.currentToken;\n    this.prepareToken(ct);\n    ct.tagID = getTagID(ct.tagName);\n    if (ct.type === TokenType.START_TAG) {\n      this.lastStartTagName = ct.tagName;\n      this.handler.onStartTag(ct);\n    } else {\n      if (ct.attrs.length > 0) {\n        this._err(ERR.endTagWithAttributes);\n      }\n      if (ct.selfClosing) {\n        this._err(ERR.endTagWithTrailingSolidus);\n      }\n      this.handler.onEndTag(ct);\n    }\n    this.preprocessor.dropParsedChunk();\n  }\n  emitCurrentComment(ct) {\n    this.prepareToken(ct);\n    this.handler.onComment(ct);\n    this.preprocessor.dropParsedChunk();\n  }\n  emitCurrentDoctype(ct) {\n    this.prepareToken(ct);\n    this.handler.onDoctype(ct);\n    this.preprocessor.dropParsedChunk();\n  }\n  _emitCurrentCharacterToken(nextLocation) {\n    if (this.currentCharacterToken) {\n      //NOTE: if we have a pending character token, make it's end location equal to the\n      //current token's start location.\n      if (nextLocation && this.currentCharacterToken.location) {\n        this.currentCharacterToken.location.endLine = nextLocation.startLine;\n        this.currentCharacterToken.location.endCol = nextLocation.startCol;\n        this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n      }\n      switch (this.currentCharacterToken.type) {\n        case TokenType.CHARACTER:\n          {\n            this.handler.onCharacter(this.currentCharacterToken);\n            break;\n          }\n        case TokenType.NULL_CHARACTER:\n          {\n            this.handler.onNullCharacter(this.currentCharacterToken);\n            break;\n          }\n        case TokenType.WHITESPACE_CHARACTER:\n          {\n            this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n            break;\n          }\n      }\n      this.currentCharacterToken = null;\n    }\n  }\n  _emitEOFToken() {\n    const location = this.getCurrentLocation(0);\n    if (location) {\n      location.endLine = location.startLine;\n      location.endCol = location.startCol;\n      location.endOffset = location.startOffset;\n    }\n    this._emitCurrentCharacterToken(location);\n    this.handler.onEof({\n      type: TokenType.EOF,\n      location\n    });\n    this.active = false;\n  }\n  //Characters emission\n  //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n  //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n  //If we have a sequence of characters that belong to the same group, the parser can process it\n  //as a single solid character token.\n  //So, there are 3 types of character tokens in parse5:\n  //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n  //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n  //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n  _appendCharToCurrentCharacterToken(type, ch) {\n    if (this.currentCharacterToken) {\n      if (this.currentCharacterToken.type !== type) {\n        this.currentLocation = this.getCurrentLocation(0);\n        this._emitCurrentCharacterToken(this.currentLocation);\n        this.preprocessor.dropParsedChunk();\n      } else {\n        this.currentCharacterToken.chars += ch;\n        return;\n      }\n    }\n    this._createCharacterToken(type, ch);\n  }\n  _emitCodePoint(cp) {\n    const type = isWhitespace(cp) ? TokenType.WHITESPACE_CHARACTER : cp === CODE_POINTS.NULL ? TokenType.NULL_CHARACTER : TokenType.CHARACTER;\n    this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n  }\n  //NOTE: used when we emit characters explicitly.\n  //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n  _emitChars(ch) {\n    this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n  }\n  // Character reference helpers\n  _matchNamedCharacterReference(cp) {\n    let result = null;\n    let excess = 0;\n    let withoutSemicolon = false;\n    for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n      i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n      if (i < 0) break;\n      excess += 1;\n      current = htmlDecodeTree[i];\n      const masked = current & BinTrieFlags.VALUE_LENGTH;\n      // If the branch is a value, store it and continue\n      if (masked) {\n        // The mask is the number of bytes of the value, including the current byte.\n        const valueLength = (masked >> 14) - 1;\n        // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n        // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n        if (cp !== CODE_POINTS.SEMICOLON && this._isCharacterReferenceInAttribute() && isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n          //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n          //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n          result = [CODE_POINTS.AMPERSAND];\n          // Skip over the value.\n          i += valueLength;\n        } else {\n          // If this is a surrogate pair, consume the next two bytes.\n          result = valueLength === 0 ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH] : valueLength === 1 ? [htmlDecodeTree[++i]] : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n          excess = 0;\n          withoutSemicolon = cp !== CODE_POINTS.SEMICOLON;\n        }\n        if (valueLength === 0) {\n          // If the value is zero-length, we're done.\n          this._consume();\n          break;\n        }\n      }\n    }\n    this._unconsume(excess);\n    if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n      this._err(ERR.missingSemicolonAfterCharacterReference);\n    }\n    // We want to emit the error above on the code point after the entity.\n    // We always consume one code point too many in the loop, and we wait to\n    // unconsume it until after the error is emitted.\n    this._unconsume(1);\n    return result;\n  }\n  _isCharacterReferenceInAttribute() {\n    return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;\n  }\n  _flushCodePointConsumedAsCharacterReference(cp) {\n    if (this._isCharacterReferenceInAttribute()) {\n      this.currentAttr.value += String.fromCodePoint(cp);\n    } else {\n      this._emitCodePoint(cp);\n    }\n  }\n  // Calling states this way turns out to be much faster than any other approach.\n  _callState(cp) {\n    switch (this.state) {\n      case State.DATA:\n        {\n          this._stateData(cp);\n          break;\n        }\n      case State.RCDATA:\n        {\n          this._stateRcdata(cp);\n          break;\n        }\n      case State.RAWTEXT:\n        {\n          this._stateRawtext(cp);\n          break;\n        }\n      case State.SCRIPT_DATA:\n        {\n          this._stateScriptData(cp);\n          break;\n        }\n      case State.PLAINTEXT:\n        {\n          this._statePlaintext(cp);\n          break;\n        }\n      case State.TAG_OPEN:\n        {\n          this._stateTagOpen(cp);\n          break;\n        }\n      case State.END_TAG_OPEN:\n        {\n          this._stateEndTagOpen(cp);\n          break;\n        }\n      case State.TAG_NAME:\n        {\n          this._stateTagName(cp);\n          break;\n        }\n      case State.RCDATA_LESS_THAN_SIGN:\n        {\n          this._stateRcdataLessThanSign(cp);\n          break;\n        }\n      case State.RCDATA_END_TAG_OPEN:\n        {\n          this._stateRcdataEndTagOpen(cp);\n          break;\n        }\n      case State.RCDATA_END_TAG_NAME:\n        {\n          this._stateRcdataEndTagName(cp);\n          break;\n        }\n      case State.RAWTEXT_LESS_THAN_SIGN:\n        {\n          this._stateRawtextLessThanSign(cp);\n          break;\n        }\n      case State.RAWTEXT_END_TAG_OPEN:\n        {\n          this._stateRawtextEndTagOpen(cp);\n          break;\n        }\n      case State.RAWTEXT_END_TAG_NAME:\n        {\n          this._stateRawtextEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_END_TAG_OPEN:\n        {\n          this._stateScriptDataEndTagOpen(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_END_TAG_NAME:\n        {\n          this._stateScriptDataEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPE_START:\n        {\n          this._stateScriptDataEscapeStart(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPE_START_DASH:\n        {\n          this._stateScriptDataEscapeStartDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED:\n        {\n          this._stateScriptDataEscaped(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_DASH:\n        {\n          this._stateScriptDataEscapedDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_DASH_DASH:\n        {\n          this._stateScriptDataEscapedDashDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataEscapedLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n        {\n          this._stateScriptDataEscapedEndTagOpen(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n        {\n          this._stateScriptDataEscapedEndTagName(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n        {\n          this._stateScriptDataDoubleEscapeStart(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED:\n        {\n          this._stateScriptDataDoubleEscaped(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n        {\n          this._stateScriptDataDoubleEscapedDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n        {\n          this._stateScriptDataDoubleEscapedDashDash(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n        {\n          this._stateScriptDataDoubleEscapedLessThanSign(cp);\n          break;\n        }\n      case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n        {\n          this._stateScriptDataDoubleEscapeEnd(cp);\n          break;\n        }\n      case State.BEFORE_ATTRIBUTE_NAME:\n        {\n          this._stateBeforeAttributeName(cp);\n          break;\n        }\n      case State.ATTRIBUTE_NAME:\n        {\n          this._stateAttributeName(cp);\n          break;\n        }\n      case State.AFTER_ATTRIBUTE_NAME:\n        {\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case State.BEFORE_ATTRIBUTE_VALUE:\n        {\n          this._stateBeforeAttributeValue(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n        {\n          this._stateAttributeValueDoubleQuoted(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n        {\n          this._stateAttributeValueSingleQuoted(cp);\n          break;\n        }\n      case State.ATTRIBUTE_VALUE_UNQUOTED:\n        {\n          this._stateAttributeValueUnquoted(cp);\n          break;\n        }\n      case State.AFTER_ATTRIBUTE_VALUE_QUOTED:\n        {\n          this._stateAfterAttributeValueQuoted(cp);\n          break;\n        }\n      case State.SELF_CLOSING_START_TAG:\n        {\n          this._stateSelfClosingStartTag(cp);\n          break;\n        }\n      case State.BOGUS_COMMENT:\n        {\n          this._stateBogusComment(cp);\n          break;\n        }\n      case State.MARKUP_DECLARATION_OPEN:\n        {\n          this._stateMarkupDeclarationOpen(cp);\n          break;\n        }\n      case State.COMMENT_START:\n        {\n          this._stateCommentStart(cp);\n          break;\n        }\n      case State.COMMENT_START_DASH:\n        {\n          this._stateCommentStartDash(cp);\n          break;\n        }\n      case State.COMMENT:\n        {\n          this._stateComment(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN:\n        {\n          this._stateCommentLessThanSign(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG:\n        {\n          this._stateCommentLessThanSignBang(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n        {\n          this._stateCommentLessThanSignBangDash(cp);\n          break;\n        }\n      case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n        {\n          this._stateCommentLessThanSignBangDashDash(cp);\n          break;\n        }\n      case State.COMMENT_END_DASH:\n        {\n          this._stateCommentEndDash(cp);\n          break;\n        }\n      case State.COMMENT_END:\n        {\n          this._stateCommentEnd(cp);\n          break;\n        }\n      case State.COMMENT_END_BANG:\n        {\n          this._stateCommentEndBang(cp);\n          break;\n        }\n      case State.DOCTYPE:\n        {\n          this._stateDoctype(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_NAME:\n        {\n          this._stateBeforeDoctypeName(cp);\n          break;\n        }\n      case State.DOCTYPE_NAME:\n        {\n          this._stateDoctypeName(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_NAME:\n        {\n          this._stateAfterDoctypeName(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n        {\n          this._stateAfterDoctypePublicKeyword(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n        {\n          this._stateBeforeDoctypePublicIdentifier(cp);\n          break;\n        }\n      case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n        {\n          this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n          break;\n        }\n      case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n        {\n          this._stateDoctypePublicIdentifierSingleQuoted(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n        {\n          this._stateAfterDoctypePublicIdentifier(cp);\n          break;\n        }\n      case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n        {\n          this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n        {\n          this._stateAfterDoctypeSystemKeyword(cp);\n          break;\n        }\n      case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n        {\n          this._stateBeforeDoctypeSystemIdentifier(cp);\n          break;\n        }\n      case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n        {\n          this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n          break;\n        }\n      case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n        {\n          this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n          break;\n        }\n      case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n        {\n          this._stateAfterDoctypeSystemIdentifier(cp);\n          break;\n        }\n      case State.BOGUS_DOCTYPE:\n        {\n          this._stateBogusDoctype(cp);\n          break;\n        }\n      case State.CDATA_SECTION:\n        {\n          this._stateCdataSection(cp);\n          break;\n        }\n      case State.CDATA_SECTION_BRACKET:\n        {\n          this._stateCdataSectionBracket(cp);\n          break;\n        }\n      case State.CDATA_SECTION_END:\n        {\n          this._stateCdataSectionEnd(cp);\n          break;\n        }\n      case State.CHARACTER_REFERENCE:\n        {\n          this._stateCharacterReference(cp);\n          break;\n        }\n      case State.NAMED_CHARACTER_REFERENCE:\n        {\n          this._stateNamedCharacterReference(cp);\n          break;\n        }\n      case State.AMBIGUOUS_AMPERSAND:\n        {\n          this._stateAmbiguousAmpersand(cp);\n          break;\n        }\n      case State.NUMERIC_CHARACTER_REFERENCE:\n        {\n          this._stateNumericCharacterReference(cp);\n          break;\n        }\n      case State.HEXADEMICAL_CHARACTER_REFERENCE_START:\n        {\n          this._stateHexademicalCharacterReferenceStart(cp);\n          break;\n        }\n      case State.HEXADEMICAL_CHARACTER_REFERENCE:\n        {\n          this._stateHexademicalCharacterReference(cp);\n          break;\n        }\n      case State.DECIMAL_CHARACTER_REFERENCE:\n        {\n          this._stateDecimalCharacterReference(cp);\n          break;\n        }\n      case State.NUMERIC_CHARACTER_REFERENCE_END:\n        {\n          this._stateNumericCharacterReferenceEnd(cp);\n          break;\n        }\n      default:\n        {\n          throw new Error('Unknown state');\n        }\n    }\n  }\n  // State machine\n  // Data state\n  //------------------------------------------------------------------\n  _stateData(cp) {\n    switch (cp) {\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.TAG_OPEN;\n          break;\n        }\n      case CODE_POINTS.AMPERSAND:\n        {\n          this.returnState = State.DATA;\n          this.state = State.CHARACTER_REFERENCE;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitCodePoint(cp);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  //  RCDATA state\n  //------------------------------------------------------------------\n  _stateRcdata(cp) {\n    switch (cp) {\n      case CODE_POINTS.AMPERSAND:\n        {\n          this.returnState = State.RCDATA;\n          this.state = State.CHARACTER_REFERENCE;\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.RCDATA_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // RAWTEXT state\n  //------------------------------------------------------------------\n  _stateRawtext(cp) {\n    switch (cp) {\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.RAWTEXT_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data state\n  //------------------------------------------------------------------\n  _stateScriptData(cp) {\n    switch (cp) {\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // PLAINTEXT state\n  //------------------------------------------------------------------\n  _statePlaintext(cp) {\n    switch (cp) {\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Tag open state\n  //------------------------------------------------------------------\n  _stateTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this._createStartTagToken();\n      this.state = State.TAG_NAME;\n      this._stateTagName(cp);\n    } else switch (cp) {\n      case CODE_POINTS.EXCLAMATION_MARK:\n        {\n          this.state = State.MARKUP_DECLARATION_OPEN;\n          break;\n        }\n      case CODE_POINTS.SOLIDUS:\n        {\n          this.state = State.END_TAG_OPEN;\n          break;\n        }\n      case CODE_POINTS.QUESTION_MARK:\n        {\n          this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n          this._createCommentToken(1);\n          this.state = State.BOGUS_COMMENT;\n          this._stateBogusComment(cp);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofBeforeTagName);\n          this._emitChars('<');\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.invalidFirstCharacterOfTagName);\n          this._emitChars('<');\n          this.state = State.DATA;\n          this._stateData(cp);\n        }\n    }\n  }\n  // End tag open state\n  //------------------------------------------------------------------\n  _stateEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this._createEndTagToken();\n      this.state = State.TAG_NAME;\n      this._stateTagName(cp);\n    } else switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingEndTagName);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofBeforeTagName);\n          this._emitChars('</');\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.invalidFirstCharacterOfTagName);\n          this._createCommentToken(2);\n          this.state = State.BOGUS_COMMENT;\n          this._stateBogusComment(cp);\n        }\n    }\n  }\n  // Tag name state\n  //------------------------------------------------------------------\n  _stateTagName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case CODE_POINTS.SOLIDUS:\n        {\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.tagName += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // RCDATA less-than sign state\n  //------------------------------------------------------------------\n  _stateRcdataLessThanSign(cp) {\n    if (cp === CODE_POINTS.SOLIDUS) {\n      this.state = State.RCDATA_END_TAG_OPEN;\n    } else {\n      this._emitChars('<');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  // RCDATA end tag open state\n  //------------------------------------------------------------------\n  _stateRcdataEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.RCDATA_END_TAG_NAME;\n      this._stateRcdataEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  handleSpecialEndTag(_cp) {\n    if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n      return !this._ensureHibernation();\n    }\n    this._createEndTagToken();\n    const token = this.currentToken;\n    token.tagName = this.lastStartTagName;\n    const cp = this.preprocessor.peek(this.lastStartTagName.length);\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          return false;\n        }\n      case CODE_POINTS.SOLIDUS:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.state = State.SELF_CLOSING_START_TAG;\n          return false;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._advanceBy(this.lastStartTagName.length);\n          this.emitCurrentTagToken();\n          this.state = State.DATA;\n          return false;\n        }\n      default:\n        {\n          return !this._ensureHibernation();\n        }\n    }\n  }\n  // RCDATA end tag name state\n  //------------------------------------------------------------------\n  _stateRcdataEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.RCDATA;\n      this._stateRcdata(cp);\n    }\n  }\n  // RAWTEXT less-than sign state\n  //------------------------------------------------------------------\n  _stateRawtextLessThanSign(cp) {\n    if (cp === CODE_POINTS.SOLIDUS) {\n      this.state = State.RAWTEXT_END_TAG_OPEN;\n    } else {\n      this._emitChars('<');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // RAWTEXT end tag open state\n  //------------------------------------------------------------------\n  _stateRawtextEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.RAWTEXT_END_TAG_NAME;\n      this._stateRawtextEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // RAWTEXT end tag name state\n  //------------------------------------------------------------------\n  _stateRawtextEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.RAWTEXT;\n      this._stateRawtext(cp);\n    }\n  }\n  // Script data less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataLessThanSign(cp) {\n    switch (cp) {\n      case CODE_POINTS.SOLIDUS:\n        {\n          this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n          break;\n        }\n      case CODE_POINTS.EXCLAMATION_MARK:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPE_START;\n          this._emitChars('<!');\n          break;\n        }\n      default:\n        {\n          this._emitChars('<');\n          this.state = State.SCRIPT_DATA;\n          this._stateScriptData(cp);\n        }\n    }\n  }\n  // Script data end tag open state\n  //------------------------------------------------------------------\n  _stateScriptDataEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.SCRIPT_DATA_END_TAG_NAME;\n      this._stateScriptDataEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data end tag name state\n  //------------------------------------------------------------------\n  _stateScriptDataEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escape start state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapeStart(cp) {\n    if (cp === CODE_POINTS.HYPHEN_MINUS) {\n      this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n      this._emitChars('-');\n    } else {\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escape start dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapeStartDash(cp) {\n    if (cp === CODE_POINTS.HYPHEN_MINUS) {\n      this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n      this._emitChars('-');\n    } else {\n      this.state = State.SCRIPT_DATA;\n      this._stateScriptData(cp);\n    }\n  }\n  // Script data escaped state\n  //------------------------------------------------------------------\n  _stateScriptDataEscaped(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedDash(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped dash dash state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedDashDash(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA;\n          this._emitChars('>');\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data escaped less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedLessThanSign(cp) {\n    if (cp === CODE_POINTS.SOLIDUS) {\n      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n    } else if (isAsciiLetter(cp)) {\n      this._emitChars('<');\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n      this._stateScriptDataDoubleEscapeStart(cp);\n    } else {\n      this._emitChars('<');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data escaped end tag open state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedEndTagOpen(cp) {\n    if (isAsciiLetter(cp)) {\n      this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n      this._stateScriptDataEscapedEndTagName(cp);\n    } else {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data escaped end tag name state\n  //------------------------------------------------------------------\n  _stateScriptDataEscapedEndTagName(cp) {\n    if (this.handleSpecialEndTag(cp)) {\n      this._emitChars('</');\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data double escape start state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapeStart(cp) {\n    if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\n      this._emitCodePoint(cp);\n      for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\n        this._emitCodePoint(this._consume());\n      }\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n    } else if (!this._ensureHibernation()) {\n      this.state = State.SCRIPT_DATA_ESCAPED;\n      this._stateScriptDataEscaped(cp);\n    }\n  }\n  // Script data double escaped state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscaped(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped dash state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedDash(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped dash dash state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedDashDash(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this._emitChars('-');\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n          this._emitChars('<');\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.SCRIPT_DATA;\n          this._emitChars('>');\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitChars(REPLACEMENT_CHARACTER);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInScriptHtmlCommentLikeText);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // Script data double escaped less-than sign state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapedLessThanSign(cp) {\n    if (cp === CODE_POINTS.SOLIDUS) {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n      this._emitChars('/');\n    } else {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n      this._stateScriptDataDoubleEscaped(cp);\n    }\n  }\n  // Script data double escape end state\n  //------------------------------------------------------------------\n  _stateScriptDataDoubleEscapeEnd(cp) {\n    if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\n      this._emitCodePoint(cp);\n      for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\n        this._emitCodePoint(this._consume());\n      }\n      this.state = State.SCRIPT_DATA_ESCAPED;\n    } else if (!this._ensureHibernation()) {\n      this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n      this._stateScriptDataDoubleEscaped(cp);\n    }\n  }\n  // Before attribute name state\n  //------------------------------------------------------------------\n  _stateBeforeAttributeName(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.SOLIDUS:\n      case CODE_POINTS.GREATER_THAN_SIGN:\n      case CODE_POINTS.EOF:\n        {\n          this.state = State.AFTER_ATTRIBUTE_NAME;\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case CODE_POINTS.EQUALS_SIGN:\n        {\n          this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n          this._createAttr('=');\n          this.state = State.ATTRIBUTE_NAME;\n          break;\n        }\n      default:\n        {\n          this._createAttr('');\n          this.state = State.ATTRIBUTE_NAME;\n          this._stateAttributeName(cp);\n        }\n    }\n  }\n  // Attribute name state\n  //------------------------------------------------------------------\n  _stateAttributeName(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n      case CODE_POINTS.SOLIDUS:\n      case CODE_POINTS.GREATER_THAN_SIGN:\n      case CODE_POINTS.EOF:\n        {\n          this._leaveAttrName();\n          this.state = State.AFTER_ATTRIBUTE_NAME;\n          this._stateAfterAttributeName(cp);\n          break;\n        }\n      case CODE_POINTS.EQUALS_SIGN:\n        {\n          this._leaveAttrName();\n          this.state = State.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n      case CODE_POINTS.APOSTROPHE:\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          this._err(ERR.unexpectedCharacterInAttributeName);\n          this.currentAttr.name += String.fromCodePoint(cp);\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.name += REPLACEMENT_CHARACTER;\n          break;\n        }\n      default:\n        {\n          this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // After attribute name state\n  //------------------------------------------------------------------\n  _stateAfterAttributeName(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.SOLIDUS:\n        {\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case CODE_POINTS.EQUALS_SIGN:\n        {\n          this.state = State.BEFORE_ATTRIBUTE_VALUE;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._createAttr('');\n          this.state = State.ATTRIBUTE_NAME;\n          this._stateAttributeName(cp);\n        }\n    }\n  }\n  // Before attribute value state\n  //------------------------------------------------------------------\n  _stateBeforeAttributeValue(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingAttributeValue);\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      default:\n        {\n          this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n          this._stateAttributeValueUnquoted(cp);\n        }\n    }\n  }\n  // Attribute value (double-quoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueDoubleQuoted(cp) {\n    switch (cp) {\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.AMPERSAND:\n        {\n          this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n          this.state = State.CHARACTER_REFERENCE;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Attribute value (single-quoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueSingleQuoted(cp) {\n    switch (cp) {\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.AMPERSAND:\n        {\n          this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n          this.state = State.CHARACTER_REFERENCE;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Attribute value (unquoted) state\n  //------------------------------------------------------------------\n  _stateAttributeValueUnquoted(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this._leaveAttrValue();\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case CODE_POINTS.AMPERSAND:\n        {\n          this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n          this.state = State.CHARACTER_REFERENCE;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._leaveAttrValue();\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this.currentAttr.value += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n      case CODE_POINTS.APOSTROPHE:\n      case CODE_POINTS.LESS_THAN_SIGN:\n      case CODE_POINTS.EQUALS_SIGN:\n      case CODE_POINTS.GRAVE_ACCENT:\n        {\n          this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n          this.currentAttr.value += String.fromCodePoint(cp);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this.currentAttr.value += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After attribute value (quoted) state\n  //------------------------------------------------------------------\n  _stateAfterAttributeValueQuoted(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this._leaveAttrValue();\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          break;\n        }\n      case CODE_POINTS.SOLIDUS:\n        {\n          this._leaveAttrValue();\n          this.state = State.SELF_CLOSING_START_TAG;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._leaveAttrValue();\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingWhitespaceBetweenAttributes);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          this._stateBeforeAttributeName(cp);\n        }\n    }\n  }\n  // Self-closing start tag state\n  //------------------------------------------------------------------\n  _stateSelfClosingStartTag(cp) {\n    switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          const token = this.currentToken;\n          token.selfClosing = true;\n          this.state = State.DATA;\n          this.emitCurrentTagToken();\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInTag);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.unexpectedSolidusInTag);\n          this.state = State.BEFORE_ATTRIBUTE_NAME;\n          this._stateBeforeAttributeName(cp);\n        }\n    }\n  }\n  // Bogus comment state\n  //------------------------------------------------------------------\n  _stateBogusComment(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.data += REPLACEMENT_CHARACTER;\n          break;\n        }\n      default:\n        {\n          token.data += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Markup declaration open state\n  //------------------------------------------------------------------\n  _stateMarkupDeclarationOpen(cp) {\n    if (this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, true)) {\n      this._createCommentToken(SEQUENCES.DASH_DASH.length + 1);\n      this.state = State.COMMENT_START;\n    } else if (this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, false)) {\n      // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n      this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1);\n      this.state = State.DOCTYPE;\n    } else if (this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, true)) {\n      if (this.inForeignNode) {\n        this.state = State.CDATA_SECTION;\n      } else {\n        this._err(ERR.cdataInHtmlContent);\n        this._createCommentToken(SEQUENCES.CDATA_START.length + 1);\n        this.currentToken.data = '[CDATA[';\n        this.state = State.BOGUS_COMMENT;\n      }\n    }\n    //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n    //results are no longer valid and we will need to start over.\n    else if (!this._ensureHibernation()) {\n      this._err(ERR.incorrectlyOpenedComment);\n      this._createCommentToken(2);\n      this.state = State.BOGUS_COMMENT;\n      this._stateBogusComment(cp);\n    }\n  }\n  // Comment start state\n  //------------------------------------------------------------------\n  _stateCommentStart(cp) {\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_START_DASH;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptClosingOfEmptyComment);\n          this.state = State.DATA;\n          const token = this.currentToken;\n          this.emitCurrentComment(token);\n          break;\n        }\n      default:\n        {\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment start dash state\n  //------------------------------------------------------------------\n  _stateCommentStartDash(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptClosingOfEmptyComment);\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '-';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment state\n  //------------------------------------------------------------------\n  _stateComment(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END_DASH;\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          token.data += '<';\n          this.state = State.COMMENT_LESS_THAN_SIGN;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.data += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // Comment less-than sign state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSign(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.EXCLAMATION_MARK:\n        {\n          token.data += '!';\n          this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n          break;\n        }\n      case CODE_POINTS.LESS_THAN_SIGN:\n        {\n          token.data += '<';\n          break;\n        }\n      default:\n        {\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment less-than sign bang state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBang(cp) {\n    if (cp === CODE_POINTS.HYPHEN_MINUS) {\n      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n    } else {\n      this.state = State.COMMENT;\n      this._stateComment(cp);\n    }\n  }\n  // Comment less-than sign bang dash state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBangDash(cp) {\n    if (cp === CODE_POINTS.HYPHEN_MINUS) {\n      this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n    } else {\n      this.state = State.COMMENT_END_DASH;\n      this._stateCommentEndDash(cp);\n    }\n  }\n  // Comment less-than sign bang dash dash state\n  //------------------------------------------------------------------\n  _stateCommentLessThanSignBangDashDash(cp) {\n    if (cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF) {\n      this._err(ERR.nestedComment);\n    }\n    this.state = State.COMMENT_END;\n    this._stateCommentEnd(cp);\n  }\n  // Comment end dash state\n  //------------------------------------------------------------------\n  _stateCommentEndDash(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          this.state = State.COMMENT_END;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '-';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment end state\n  //------------------------------------------------------------------\n  _stateCommentEnd(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case CODE_POINTS.EXCLAMATION_MARK:\n        {\n          this.state = State.COMMENT_END_BANG;\n          break;\n        }\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          token.data += '-';\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '--';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // Comment end bang state\n  //------------------------------------------------------------------\n  _stateCommentEndBang(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.HYPHEN_MINUS:\n        {\n          token.data += '--!';\n          this.state = State.COMMENT_END_DASH;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.incorrectlyClosedComment);\n          this.state = State.DATA;\n          this.emitCurrentComment(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInComment);\n          this.emitCurrentComment(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.data += '--!';\n          this.state = State.COMMENT;\n          this._stateComment(cp);\n        }\n    }\n  }\n  // DOCTYPE state\n  //------------------------------------------------------------------\n  _stateDoctype(cp) {\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          this._stateBeforeDoctypeName(cp);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingWhitespaceBeforeDoctypeName);\n          this.state = State.BEFORE_DOCTYPE_NAME;\n          this._stateBeforeDoctypeName(cp);\n        }\n    }\n  }\n  // Before DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypeName(cp) {\n    if (isAsciiUpper(cp)) {\n      this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n      this.state = State.DOCTYPE_NAME;\n    } else switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          this._createDoctypeToken(REPLACEMENT_CHARACTER);\n          this.state = State.DOCTYPE_NAME;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeName);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          this._createDoctypeToken(null);\n          const token = this.currentToken;\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._createDoctypeToken(String.fromCodePoint(cp));\n          this.state = State.DOCTYPE_NAME;\n        }\n    }\n  }\n  // DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateDoctypeName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.AFTER_DOCTYPE_NAME;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.name += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n        }\n    }\n  }\n  // After DOCTYPE name state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeName(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          if (this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, false)) {\n            this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n          } else if (this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, false)) {\n            this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n          }\n          //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n          //results are no longer valid and we will need to start over.\n          else if (!this._ensureHibernation()) {\n            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n            token.forceQuirks = true;\n            this.state = State.BOGUS_DOCTYPE;\n            this._stateBogusDoctype(cp);\n          }\n        }\n    }\n  }\n  // After DOCTYPE public keyword state\n  //------------------------------------------------------------------\n  _stateAfterDoctypePublicKeyword(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Before DOCTYPE public identifier state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypePublicIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          token.publicId = '';\n          this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // DOCTYPE public identifier (double-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.publicId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.publicId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // DOCTYPE public identifier (single-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypePublicIdentifierSingleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.publicId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypePublicIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.publicId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After DOCTYPE public identifier state\n  //------------------------------------------------------------------\n  _stateAfterDoctypePublicIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Between DOCTYPE public and system identifiers state\n  //------------------------------------------------------------------\n  _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // After DOCTYPE system keyword state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeSystemKeyword(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Before DOCTYPE system identifier state\n  //------------------------------------------------------------------\n  _stateBeforeDoctypeSystemIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.APOSTROPHE:\n        {\n          token.systemId = '';\n          this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.missingDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.DATA;\n          this.emitCurrentDoctype(token);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // DOCTYPE system identifier (double-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.QUOTATION_MARK:\n        {\n          this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.systemId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.systemId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // DOCTYPE system identifier (single-quoted) state\n  //------------------------------------------------------------------\n  _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.APOSTROPHE:\n        {\n          this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          token.systemId += REPLACEMENT_CHARACTER;\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this._err(ERR.abruptDoctypeSystemIdentifier);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          token.systemId += String.fromCodePoint(cp);\n        }\n    }\n  }\n  // After DOCTYPE system identifier state\n  //------------------------------------------------------------------\n  _stateAfterDoctypeSystemIdentifier(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.SPACE:\n      case CODE_POINTS.LINE_FEED:\n      case CODE_POINTS.TABULATION:\n      case CODE_POINTS.FORM_FEED:\n        {\n          // Ignore whitespace\n          break;\n        }\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInDoctype);\n          token.forceQuirks = true;\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n          this.state = State.BOGUS_DOCTYPE;\n          this._stateBogusDoctype(cp);\n        }\n    }\n  }\n  // Bogus DOCTYPE state\n  //------------------------------------------------------------------\n  _stateBogusDoctype(cp) {\n    const token = this.currentToken;\n    switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.emitCurrentDoctype(token);\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.NULL:\n        {\n          this._err(ERR.unexpectedNullCharacter);\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this.emitCurrentDoctype(token);\n          this._emitEOFToken();\n          break;\n        }\n      // Do nothing\n    }\n  }\n  // CDATA section state\n  //------------------------------------------------------------------\n  _stateCdataSection(cp) {\n    switch (cp) {\n      case CODE_POINTS.RIGHT_SQUARE_BRACKET:\n        {\n          this.state = State.CDATA_SECTION_BRACKET;\n          break;\n        }\n      case CODE_POINTS.EOF:\n        {\n          this._err(ERR.eofInCdata);\n          this._emitEOFToken();\n          break;\n        }\n      default:\n        {\n          this._emitCodePoint(cp);\n        }\n    }\n  }\n  // CDATA section bracket state\n  //------------------------------------------------------------------\n  _stateCdataSectionBracket(cp) {\n    if (cp === CODE_POINTS.RIGHT_SQUARE_BRACKET) {\n      this.state = State.CDATA_SECTION_END;\n    } else {\n      this._emitChars(']');\n      this.state = State.CDATA_SECTION;\n      this._stateCdataSection(cp);\n    }\n  }\n  // CDATA section end state\n  //------------------------------------------------------------------\n  _stateCdataSectionEnd(cp) {\n    switch (cp) {\n      case CODE_POINTS.GREATER_THAN_SIGN:\n        {\n          this.state = State.DATA;\n          break;\n        }\n      case CODE_POINTS.RIGHT_SQUARE_BRACKET:\n        {\n          this._emitChars(']');\n          break;\n        }\n      default:\n        {\n          this._emitChars(']]');\n          this.state = State.CDATA_SECTION;\n          this._stateCdataSection(cp);\n        }\n    }\n  }\n  // Character reference state\n  //------------------------------------------------------------------\n  _stateCharacterReference(cp) {\n    if (cp === CODE_POINTS.NUMBER_SIGN) {\n      this.state = State.NUMERIC_CHARACTER_REFERENCE;\n    } else if (isAsciiAlphaNumeric(cp)) {\n      this.state = State.NAMED_CHARACTER_REFERENCE;\n      this._stateNamedCharacterReference(cp);\n    } else {\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n      this._reconsumeInState(this.returnState, cp);\n    }\n  }\n  // Named character reference state\n  //------------------------------------------------------------------\n  _stateNamedCharacterReference(cp) {\n    const matchResult = this._matchNamedCharacterReference(cp);\n    //NOTE: Matching can be abrupted by hibernation. In that case, match\n    //results are no longer valid and we will need to start over.\n    if (this._ensureHibernation()) ;else if (matchResult) {\n      for (let i = 0; i < matchResult.length; i++) {\n        this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n      }\n      this.state = this.returnState;\n    } else {\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n      this.state = State.AMBIGUOUS_AMPERSAND;\n    }\n  }\n  // Ambiguos ampersand state\n  //------------------------------------------------------------------\n  _stateAmbiguousAmpersand(cp) {\n    if (isAsciiAlphaNumeric(cp)) {\n      this._flushCodePointConsumedAsCharacterReference(cp);\n    } else {\n      if (cp === CODE_POINTS.SEMICOLON) {\n        this._err(ERR.unknownNamedCharacterReference);\n      }\n      this._reconsumeInState(this.returnState, cp);\n    }\n  }\n  // Numeric character reference state\n  //------------------------------------------------------------------\n  _stateNumericCharacterReference(cp) {\n    this.charRefCode = 0;\n    if (cp === CODE_POINTS.LATIN_SMALL_X || cp === CODE_POINTS.LATIN_CAPITAL_X) {\n      this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n    }\n    // Inlined decimal character reference start state\n    else if (isAsciiDigit(cp)) {\n      this.state = State.DECIMAL_CHARACTER_REFERENCE;\n      this._stateDecimalCharacterReference(cp);\n    } else {\n      this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\n      this._reconsumeInState(this.returnState, cp);\n    }\n  }\n  // Hexademical character reference start state\n  //------------------------------------------------------------------\n  _stateHexademicalCharacterReferenceStart(cp) {\n    if (isAsciiHexDigit(cp)) {\n      this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n      this._stateHexademicalCharacterReference(cp);\n    } else {\n      this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n      this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\n      this._unconsume(2);\n      this.state = this.returnState;\n    }\n  }\n  // Hexademical character reference state\n  //------------------------------------------------------------------\n  _stateHexademicalCharacterReference(cp) {\n    if (isAsciiUpperHexDigit(cp)) {\n      this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n    } else if (isAsciiLowerHexDigit(cp)) {\n      this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n    } else if (isAsciiDigit(cp)) {\n      this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n    } else if (cp === CODE_POINTS.SEMICOLON) {\n      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n    } else {\n      this._err(ERR.missingSemicolonAfterCharacterReference);\n      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n      this._stateNumericCharacterReferenceEnd(cp);\n    }\n  }\n  // Decimal character reference state\n  //------------------------------------------------------------------\n  _stateDecimalCharacterReference(cp) {\n    if (isAsciiDigit(cp)) {\n      this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n    } else if (cp === CODE_POINTS.SEMICOLON) {\n      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n    } else {\n      this._err(ERR.missingSemicolonAfterCharacterReference);\n      this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n      this._stateNumericCharacterReferenceEnd(cp);\n    }\n  }\n  // Numeric character reference end state\n  //------------------------------------------------------------------\n  _stateNumericCharacterReferenceEnd(cp) {\n    if (this.charRefCode === CODE_POINTS.NULL) {\n      this._err(ERR.nullCharacterReference);\n      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n    } else if (this.charRefCode > 1114111) {\n      this._err(ERR.characterReferenceOutsideUnicodeRange);\n      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n    } else if (isSurrogate(this.charRefCode)) {\n      this._err(ERR.surrogateCharacterReference);\n      this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n    } else if (isUndefinedCodePoint(this.charRefCode)) {\n      this._err(ERR.noncharacterCharacterReference);\n    } else if (isControlCodePoint(this.charRefCode) || this.charRefCode === CODE_POINTS.CARRIAGE_RETURN) {\n      this._err(ERR.controlCharacterReference);\n      const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n      if (replacement !== undefined) {\n        this.charRefCode = replacement;\n      }\n    }\n    this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n    this._reconsumeInState(this.returnState, cp);\n  }\n}\n\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([...IMPLICIT_END_TAG_REQUIRED, TAG_ID.CAPTION, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);\nconst SCOPING_ELEMENT_NS = new Map([[TAG_ID.APPLET, NS.HTML], [TAG_ID.CAPTION, NS.HTML], [TAG_ID.HTML, NS.HTML], [TAG_ID.MARQUEE, NS.HTML], [TAG_ID.OBJECT, NS.HTML], [TAG_ID.TABLE, NS.HTML], [TAG_ID.TD, NS.HTML], [TAG_ID.TEMPLATE, NS.HTML], [TAG_ID.TH, NS.HTML], [TAG_ID.ANNOTATION_XML, NS.MATHML], [TAG_ID.MI, NS.MATHML], [TAG_ID.MN, NS.MATHML], [TAG_ID.MO, NS.MATHML], [TAG_ID.MS, NS.MATHML], [TAG_ID.MTEXT, NS.MATHML], [TAG_ID.DESC, NS.SVG], [TAG_ID.FOREIGN_OBJECT, NS.SVG], [TAG_ID.TITLE, NS.SVG]]);\nconst NAMED_HEADERS = [TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6];\nconst TABLE_ROW_CONTEXT = [TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_BODY_CONTEXT = [TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_CONTEXT = [TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_CELLS = [TAG_ID.TD, TAG_ID.TH];\n//Stack of open elements\nclass OpenElementStack {\n  get currentTmplContentOrNode() {\n    return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n  }\n  constructor(document, treeAdapter, handler) {\n    this.treeAdapter = treeAdapter;\n    this.handler = handler;\n    this.items = [];\n    this.tagIDs = [];\n    this.stackTop = -1;\n    this.tmplCount = 0;\n    this.currentTagId = TAG_ID.UNKNOWN;\n    this.current = document;\n  }\n  //Index of element\n  _indexOf(element) {\n    return this.items.lastIndexOf(element, this.stackTop);\n  }\n  //Update current element\n  _isInTemplate() {\n    return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n  }\n  _updateCurrentElement() {\n    this.current = this.items[this.stackTop];\n    this.currentTagId = this.tagIDs[this.stackTop];\n  }\n  //Mutations\n  push(element, tagID) {\n    this.stackTop++;\n    this.items[this.stackTop] = element;\n    this.current = element;\n    this.tagIDs[this.stackTop] = tagID;\n    this.currentTagId = tagID;\n    if (this._isInTemplate()) {\n      this.tmplCount++;\n    }\n    this.handler.onItemPush(element, tagID, true);\n  }\n  pop() {\n    const popped = this.current;\n    if (this.tmplCount > 0 && this._isInTemplate()) {\n      this.tmplCount--;\n    }\n    this.stackTop--;\n    this._updateCurrentElement();\n    this.handler.onItemPop(popped, true);\n  }\n  replace(oldElement, newElement) {\n    const idx = this._indexOf(oldElement);\n    this.items[idx] = newElement;\n    if (idx === this.stackTop) {\n      this.current = newElement;\n    }\n  }\n  insertAfter(referenceElement, newElement, newElementID) {\n    const insertionIdx = this._indexOf(referenceElement) + 1;\n    this.items.splice(insertionIdx, 0, newElement);\n    this.tagIDs.splice(insertionIdx, 0, newElementID);\n    this.stackTop++;\n    if (insertionIdx === this.stackTop) {\n      this._updateCurrentElement();\n    }\n    this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n  }\n  popUntilTagNamePopped(tagName) {\n    let targetIdx = this.stackTop + 1;\n    do {\n      targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n    } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n    this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n  }\n  shortenToLength(idx) {\n    while (this.stackTop >= idx) {\n      const popped = this.current;\n      if (this.tmplCount > 0 && this._isInTemplate()) {\n        this.tmplCount -= 1;\n      }\n      this.stackTop--;\n      this._updateCurrentElement();\n      this.handler.onItemPop(popped, this.stackTop < idx);\n    }\n  }\n  popUntilElementPopped(element) {\n    const idx = this._indexOf(element);\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n  popUntilPopped(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n    this.shortenToLength(idx < 0 ? 0 : idx);\n  }\n  popUntilNumberedHeaderPopped() {\n    this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n  }\n  popUntilTableCellPopped() {\n    this.popUntilPopped(TABLE_CELLS, NS.HTML);\n  }\n  popAllUpToHtmlElement() {\n    //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n    //we perform this fast stack clean up.\n    this.tmplCount = 0;\n    this.shortenToLength(1);\n  }\n  _indexOfTagNames(tagNames, namespace) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  clearBackTo(tagNames, targetNS) {\n    const idx = this._indexOfTagNames(tagNames, targetNS);\n    this.shortenToLength(idx + 1);\n  }\n  clearBackToTableContext() {\n    this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n  }\n  clearBackToTableBodyContext() {\n    this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n  }\n  clearBackToTableRowContext() {\n    this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n  }\n  remove(element) {\n    const idx = this._indexOf(element);\n    if (idx >= 0) {\n      if (idx === this.stackTop) {\n        this.pop();\n      } else {\n        this.items.splice(idx, 1);\n        this.tagIDs.splice(idx, 1);\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(element, false);\n      }\n    }\n  }\n  //Search\n  tryPeekProperlyNestedBodyElement() {\n    //Properly nested <body> element (should be second element in stack).\n    return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;\n  }\n  contains(element) {\n    return this._indexOf(element) > -1;\n  }\n  getCommonAncestor(element) {\n    const elementIdx = this._indexOf(element) - 1;\n    return elementIdx >= 0 ? this.items[elementIdx] : null;\n  }\n  isRootHtmlElementCurrent() {\n    return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;\n  }\n  //Element in scope\n  hasInScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasNumberedHeaderInScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (isNumberedHeader(tn) && ns === NS.HTML) {\n        return true;\n      }\n      if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInListItemScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if ((tn === TAG_ID.UL || tn === TAG_ID.OL) && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInButtonScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (tn === tagName && ns === NS.HTML) {\n        return true;\n      }\n      if (tn === TAG_ID.BUTTON && ns === NS.HTML || SCOPING_ELEMENT_NS.get(tn) === ns) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInTableScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === tagName) {\n        return true;\n      }\n      if (tn === TAG_ID.TABLE || tn === TAG_ID.TEMPLATE || tn === TAG_ID.HTML) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasTableBodyContextInTableScope() {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === TAG_ID.TBODY || tn === TAG_ID.THEAD || tn === TAG_ID.TFOOT) {\n        return true;\n      }\n      if (tn === TAG_ID.TABLE || tn === TAG_ID.HTML) {\n        return false;\n      }\n    }\n    return true;\n  }\n  hasInSelectScope(tagName) {\n    for (let i = this.stackTop; i >= 0; i--) {\n      const tn = this.tagIDs[i];\n      const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n      if (ns !== NS.HTML) {\n        continue;\n      }\n      if (tn === tagName) {\n        return true;\n      }\n      if (tn !== TAG_ID.OPTION && tn !== TAG_ID.OPTGROUP) {\n        return false;\n      }\n    }\n    return true;\n  }\n  //Implied end tags\n  generateImpliedEndTags() {\n    while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsThoroughly() {\n    while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n  generateImpliedEndTagsWithExclusion(exclusionId) {\n    while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n      this.pop();\n    }\n  }\n}\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\nvar EntryType;\n(function (EntryType) {\n  EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n  EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = {\n  type: EntryType.Marker\n};\n//List of formatting elements\nclass FormattingElementList {\n  constructor(treeAdapter) {\n    this.treeAdapter = treeAdapter;\n    this.entries = [];\n    this.bookmark = null;\n  }\n  //Noah Ark's condition\n  //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n  //lightweight heuristics without thorough attributes check.\n  _getNoahArkConditionCandidates(newElement, neAttrs) {\n    const candidates = [];\n    const neAttrsLength = neAttrs.length;\n    const neTagName = this.treeAdapter.getTagName(newElement);\n    const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n    for (let i = 0; i < this.entries.length; i++) {\n      const entry = this.entries[i];\n      if (entry.type === EntryType.Marker) {\n        break;\n      }\n      const {\n        element\n      } = entry;\n      if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n        const elementAttrs = this.treeAdapter.getAttrList(element);\n        if (elementAttrs.length === neAttrsLength) {\n          candidates.push({\n            idx: i,\n            attrs: elementAttrs\n          });\n        }\n      }\n    }\n    return candidates;\n  }\n  _ensureNoahArkCondition(newElement) {\n    if (this.entries.length < NOAH_ARK_CAPACITY) return;\n    const neAttrs = this.treeAdapter.getAttrList(newElement);\n    const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n    if (candidates.length < NOAH_ARK_CAPACITY) return;\n    //NOTE: build attrs map for the new element, so we can perform fast lookups\n    const neAttrsMap = new Map(neAttrs.map(neAttr => [neAttr.name, neAttr.value]));\n    let validCandidates = 0;\n    //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n    for (let i = 0; i < candidates.length; i++) {\n      const candidate = candidates[i];\n      // We know that `candidate.attrs.length === neAttrs.length`\n      if (candidate.attrs.every(cAttr => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n        validCandidates += 1;\n        if (validCandidates >= NOAH_ARK_CAPACITY) {\n          this.entries.splice(candidate.idx, 1);\n        }\n      }\n    }\n  }\n  //Mutations\n  insertMarker() {\n    this.entries.unshift(MARKER);\n  }\n  pushElement(element, token) {\n    this._ensureNoahArkCondition(element);\n    this.entries.unshift({\n      type: EntryType.Element,\n      element,\n      token\n    });\n  }\n  insertElementAfterBookmark(element, token) {\n    const bookmarkIdx = this.entries.indexOf(this.bookmark);\n    this.entries.splice(bookmarkIdx, 0, {\n      type: EntryType.Element,\n      element,\n      token\n    });\n  }\n  removeEntry(entry) {\n    const entryIndex = this.entries.indexOf(entry);\n    if (entryIndex >= 0) {\n      this.entries.splice(entryIndex, 1);\n    }\n  }\n  /**\n   * Clears the list of formatting elements up to the last marker.\n   *\n   * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n   */\n  clearToLastMarker() {\n    const markerIdx = this.entries.indexOf(MARKER);\n    if (markerIdx >= 0) {\n      this.entries.splice(0, markerIdx + 1);\n    } else {\n      this.entries.length = 0;\n    }\n  }\n  //Search\n  getElementEntryInScopeWithTagName(tagName) {\n    const entry = this.entries.find(entry => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n    return entry && entry.type === EntryType.Element ? entry : null;\n  }\n  getElementEntry(element) {\n    return this.entries.find(entry => entry.type === EntryType.Element && entry.element === element);\n  }\n}\nfunction createTextNode(value) {\n  return {\n    nodeName: '#text',\n    value,\n    parentNode: null\n  };\n}\nconst defaultTreeAdapter = {\n  //Node construction\n  createDocument() {\n    return {\n      nodeName: '#document',\n      mode: DOCUMENT_MODE.NO_QUIRKS,\n      childNodes: []\n    };\n  },\n  createDocumentFragment() {\n    return {\n      nodeName: '#document-fragment',\n      childNodes: []\n    };\n  },\n  createElement(tagName, namespaceURI, attrs) {\n    return {\n      nodeName: tagName,\n      tagName,\n      attrs,\n      namespaceURI,\n      childNodes: [],\n      parentNode: null\n    };\n  },\n  createCommentNode(data) {\n    return {\n      nodeName: '#comment',\n      data,\n      parentNode: null\n    };\n  },\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n  },\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n  },\n  setTemplateContent(templateElement, contentElement) {\n    templateElement.content = contentElement;\n  },\n  getTemplateContent(templateElement) {\n    return templateElement.content;\n  },\n  setDocumentType(document, name, publicId, systemId) {\n    const doctypeNode = document.childNodes.find(node => node.nodeName === '#documentType');\n    if (doctypeNode) {\n      doctypeNode.name = name;\n      doctypeNode.publicId = publicId;\n      doctypeNode.systemId = systemId;\n    } else {\n      const node = {\n        nodeName: '#documentType',\n        name,\n        publicId,\n        systemId,\n        parentNode: null\n      };\n      defaultTreeAdapter.appendChild(document, node);\n    }\n  },\n  setDocumentMode(document, mode) {\n    document.mode = mode;\n  },\n  getDocumentMode(document) {\n    return document.mode;\n  },\n  detachNode(node) {\n    if (node.parentNode) {\n      const idx = node.parentNode.childNodes.indexOf(node);\n      node.parentNode.childNodes.splice(idx, 1);\n      node.parentNode = null;\n    }\n  },\n  insertText(parentNode, text) {\n    if (parentNode.childNodes.length > 0) {\n      const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n      if (defaultTreeAdapter.isTextNode(prevNode)) {\n        prevNode.value += text;\n        return;\n      }\n    }\n    defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n  },\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n    if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n      prevNode.value += text;\n    } else {\n      defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n  },\n  adoptAttributes(recipient, attrs) {\n    const recipientAttrsMap = new Set(recipient.attrs.map(attr => attr.name));\n    for (let j = 0; j < attrs.length; j++) {\n      if (!recipientAttrsMap.has(attrs[j].name)) {\n        recipient.attrs.push(attrs[j]);\n      }\n    }\n  },\n  //Tree traversing\n  getFirstChild(node) {\n    return node.childNodes[0];\n  },\n  getChildNodes(node) {\n    return node.childNodes;\n  },\n  getParentNode(node) {\n    return node.parentNode;\n  },\n  getAttrList(element) {\n    return element.attrs;\n  },\n  //Node data\n  getTagName(element) {\n    return element.tagName;\n  },\n  getNamespaceURI(element) {\n    return element.namespaceURI;\n  },\n  getTextNodeContent(textNode) {\n    return textNode.value;\n  },\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n  getDocumentTypeNodeName(doctypeNode) {\n    return doctypeNode.name;\n  },\n  getDocumentTypeNodePublicId(doctypeNode) {\n    return doctypeNode.publicId;\n  },\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    return doctypeNode.systemId;\n  },\n  //Node types\n  isTextNode(node) {\n    return node.nodeName === '#text';\n  },\n  isCommentNode(node) {\n    return node.nodeName === '#comment';\n  },\n  isDocumentTypeNode(node) {\n    return node.nodeName === '#documentType';\n  },\n  isElementNode(node) {\n    return Object.prototype.hasOwnProperty.call(node, 'tagName');\n  },\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    node.sourceCodeLocation = location;\n  },\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n  updateNodeSourceCodeLocation(node, endLocation) {\n    node.sourceCodeLocation = {\n      ...node.sourceCodeLocation,\n      ...endLocation\n    };\n  }\n};\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = ['+//silmaril//dtd html pro v0r11 19970101//', '-//as//dtd html 3.0 aswedit + extensions//', '-//advasoft ltd//dtd html 3.0 aswedit + extensions//', '-//ietf//dtd html 2.0 level 1//', '-//ietf//dtd html 2.0 level 2//', '-//ietf//dtd html 2.0 strict level 1//', '-//ietf//dtd html 2.0 strict level 2//', '-//ietf//dtd html 2.0 strict//', '-//ietf//dtd html 2.0//', '-//ietf//dtd html 2.1e//', '-//ietf//dtd html 3.0//', '-//ietf//dtd html 3.2 final//', '-//ietf//dtd html 3.2//', '-//ietf//dtd html 3//', '-//ietf//dtd html level 0//', '-//ietf//dtd html level 1//', '-//ietf//dtd html level 2//', '-//ietf//dtd html level 3//', '-//ietf//dtd html strict level 0//', '-//ietf//dtd html strict level 1//', '-//ietf//dtd html strict level 2//', '-//ietf//dtd html strict level 3//', '-//ietf//dtd html strict//', '-//ietf//dtd html//', '-//metrius//dtd metrius presentational//', '-//microsoft//dtd internet explorer 2.0 html strict//', '-//microsoft//dtd internet explorer 2.0 html//', '-//microsoft//dtd internet explorer 2.0 tables//', '-//microsoft//dtd internet explorer 3.0 html strict//', '-//microsoft//dtd internet explorer 3.0 html//', '-//microsoft//dtd internet explorer 3.0 tables//', '-//netscape comm. corp.//dtd html//', '-//netscape comm. corp.//dtd strict html//', \"-//o'reilly and associates//dtd html 2.0//\", \"-//o'reilly and associates//dtd html extended 1.0//\", \"-//o'reilly and associates//dtd html extended relaxed 1.0//\", '-//sq//dtd html 2.0 hotmetal + extensions//', '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//', '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//', '-//spyglass//dtd html 2.0 extended//', '-//sun microsystems corp.//dtd hotjava html//', '-//sun microsystems corp.//dtd hotjava strict html//', '-//w3c//dtd html 3 1995-03-24//', '-//w3c//dtd html 3.2 draft//', '-//w3c//dtd html 3.2 final//', '-//w3c//dtd html 3.2//', '-//w3c//dtd html 3.2s draft//', '-//w3c//dtd html 4.0 frameset//', '-//w3c//dtd html 4.0 transitional//', '-//w3c//dtd html experimental 19960712//', '-//w3c//dtd html experimental 970421//', '-//w3c//dtd w3 html//', '-//w3o//dtd w3 html 3.0//', '-//webtechs//dtd mozilla html 2.0//', '-//webtechs//dtd mozilla html//'];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...QUIRKS_MODE_PUBLIC_ID_PREFIXES, '-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//'];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set(['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html']);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES, '-//w3c//dtd html 4.01 frameset//', '-//w3c//dtd html 4.01 transitional//'];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n  return prefixes.some(prefix => publicId.startsWith(prefix));\n}\n//API\nfunction isConforming(token) {\n  return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);\n}\nfunction getDocumentMode(token) {\n  if (token.name !== VALID_DOCTYPE_NAME) {\n    return DOCUMENT_MODE.QUIRKS;\n  }\n  const {\n    systemId\n  } = token;\n  if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n    return DOCUMENT_MODE.QUIRKS;\n  }\n  let {\n    publicId\n  } = token;\n  if (publicId !== null) {\n    publicId = publicId.toLowerCase();\n    if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n      return DOCUMENT_MODE.QUIRKS;\n    }\n    let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n    if (hasPrefix(publicId, prefixes)) {\n      return DOCUMENT_MODE.QUIRKS;\n    }\n    prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n    if (hasPrefix(publicId, prefixes)) {\n      return DOCUMENT_MODE.LIMITED_QUIRKS;\n    }\n  }\n  return DOCUMENT_MODE.NO_QUIRKS;\n}\n\n//MIME types\nconst MIME_TYPES = {\n  TEXT_HTML: 'text/html',\n  APPLICATION_XML: 'application/xhtml+xml'\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map(['attributeName', 'attributeType', 'baseFrequency', 'baseProfile', 'calcMode', 'clipPathUnits', 'diffuseConstant', 'edgeMode', 'filterUnits', 'glyphRef', 'gradientTransform', 'gradientUnits', 'kernelMatrix', 'kernelUnitLength', 'keyPoints', 'keySplines', 'keyTimes', 'lengthAdjust', 'limitingConeAngle', 'markerHeight', 'markerUnits', 'markerWidth', 'maskContentUnits', 'maskUnits', 'numOctaves', 'pathLength', 'patternContentUnits', 'patternTransform', 'patternUnits', 'pointsAtX', 'pointsAtY', 'pointsAtZ', 'preserveAlpha', 'preserveAspectRatio', 'primitiveUnits', 'refX', 'refY', 'repeatCount', 'repeatDur', 'requiredExtensions', 'requiredFeatures', 'specularConstant', 'specularExponent', 'spreadMethod', 'startOffset', 'stdDeviation', 'stitchTiles', 'surfaceScale', 'systemLanguage', 'tableValues', 'targetX', 'targetY', 'textLength', 'viewBox', 'viewTarget', 'xChannelSelector', 'yChannelSelector', 'zoomAndPan'].map(attr => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([['xlink:actuate', {\n  prefix: 'xlink',\n  name: 'actuate',\n  namespace: NS.XLINK\n}], ['xlink:arcrole', {\n  prefix: 'xlink',\n  name: 'arcrole',\n  namespace: NS.XLINK\n}], ['xlink:href', {\n  prefix: 'xlink',\n  name: 'href',\n  namespace: NS.XLINK\n}], ['xlink:role', {\n  prefix: 'xlink',\n  name: 'role',\n  namespace: NS.XLINK\n}], ['xlink:show', {\n  prefix: 'xlink',\n  name: 'show',\n  namespace: NS.XLINK\n}], ['xlink:title', {\n  prefix: 'xlink',\n  name: 'title',\n  namespace: NS.XLINK\n}], ['xlink:type', {\n  prefix: 'xlink',\n  name: 'type',\n  namespace: NS.XLINK\n}], ['xml:base', {\n  prefix: 'xml',\n  name: 'base',\n  namespace: NS.XML\n}], ['xml:lang', {\n  prefix: 'xml',\n  name: 'lang',\n  namespace: NS.XML\n}], ['xml:space', {\n  prefix: 'xml',\n  name: 'space',\n  namespace: NS.XML\n}], ['xmlns', {\n  prefix: '',\n  name: 'xmlns',\n  namespace: NS.XMLNS\n}], ['xmlns:xlink', {\n  prefix: 'xmlns',\n  name: 'xlink',\n  namespace: NS.XMLNS\n}]]);\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map(['altGlyph', 'altGlyphDef', 'altGlyphItem', 'animateColor', 'animateMotion', 'animateTransform', 'clipPath', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'foreignObject', 'glyphRef', 'linearGradient', 'radialGradient', 'textPath'].map(tn => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([TAG_ID.B, TAG_ID.BIG, TAG_ID.BLOCKQUOTE, TAG_ID.BODY, TAG_ID.BR, TAG_ID.CENTER, TAG_ID.CODE, TAG_ID.DD, TAG_ID.DIV, TAG_ID.DL, TAG_ID.DT, TAG_ID.EM, TAG_ID.EMBED, TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6, TAG_ID.HEAD, TAG_ID.HR, TAG_ID.I, TAG_ID.IMG, TAG_ID.LI, TAG_ID.LISTING, TAG_ID.MENU, TAG_ID.META, TAG_ID.NOBR, TAG_ID.OL, TAG_ID.P, TAG_ID.PRE, TAG_ID.RUBY, TAG_ID.S, TAG_ID.SMALL, TAG_ID.SPAN, TAG_ID.STRONG, TAG_ID.STRIKE, TAG_ID.SUB, TAG_ID.SUP, TAG_ID.TABLE, TAG_ID.TT, TAG_ID.U, TAG_ID.UL, TAG_ID.VAR]);\n//Check exit from foreign content\nfunction causesExit(startTagToken) {\n  const tn = startTagToken.tagID;\n  const isFontWithAttrs = tn === TAG_ID.FONT && startTagToken.attrs.some(({\n    name\n  }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n  return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nfunction adjustTokenMathMLAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n      token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n      break;\n    }\n  }\n}\nfunction adjustTokenSVGAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n    if (adjustedAttrName != null) {\n      token.attrs[i].name = adjustedAttrName;\n    }\n  }\n}\nfunction adjustTokenXMLAttrs(token) {\n  for (let i = 0; i < token.attrs.length; i++) {\n    const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n    if (adjustedAttrEntry) {\n      token.attrs[i].prefix = adjustedAttrEntry.prefix;\n      token.attrs[i].name = adjustedAttrEntry.name;\n      token.attrs[i].namespace = adjustedAttrEntry.namespace;\n    }\n  }\n}\nfunction adjustTokenSVGTagName(token) {\n  const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n  if (adjustedTagName != null) {\n    token.tagName = adjustedTagName;\n    token.tagID = getTagID(token.tagName);\n  }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n  return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n  if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {\n    for (let i = 0; i < attrs.length; i++) {\n      if (attrs[i].name === ATTRS.ENCODING) {\n        const value = attrs[i].value.toLowerCase();\n        return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n      }\n    }\n  }\n  return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);\n}\nfunction isIntegrationPoint(tn, ns, attrs, foreignNS) {\n  return (!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);\n}\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]);\nconst defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nclass Parser {\n  constructor(options, document, fragmentContext = null, scriptHandler = null) {\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    this.insertionMode = InsertionMode.INITIAL;\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    this.headElement = null;\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\n     * The template insertion mode stack is maintained from the left.\n     * Ie. the topmost element will always have index 0.\n     */\n    this.tmplInsertionModeStack = [];\n    this.pendingCharacterTokens = [];\n    this.hasNonWhitespacePendingCharacterToken = false;\n    this.framesetOk = true;\n    this.skipNextNewLine = false;\n    this.fosterParentingEnabled = false;\n    this.options = {\n      ...defaultParserOptions,\n      ...options\n    };\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new Tokenizer(this.options, this);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  static parse(html, options) {\n    const parser = new this(options);\n    parser.tokenizer.write(html, true);\n    return parser.document;\n  }\n  static getFragmentParser(fragmentContext, options) {\n    const opts = {\n      ...defaultParserOptions,\n      ...options\n    };\n    //NOTE: use a <template> element as the fragment context if no context element was provided,\n    //so we will parse in a \"forgiving\" manner\n    fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []);\n    //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n    //This is important for jsdom, where a new `document` cannot be created. This led to\n    //fragment parsing messing with the main `document`.\n    const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n    const parser = new this(opts, documentMock, fragmentContext);\n    if (parser.fragmentContextID === TAG_ID.TEMPLATE) {\n      parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n    }\n    parser._initTokenizerForFragmentParsing();\n    parser._insertFakeRootElement();\n    parser._resetInsertionMode();\n    parser._findFormInFragmentContext();\n    return parser;\n  }\n  getFragment() {\n    const rootElement = this.treeAdapter.getFirstChild(this.document);\n    const fragment = this.treeAdapter.createDocumentFragment();\n    this._adoptNodes(rootElement, fragment);\n    return fragment;\n  }\n  //Errors\n  _err(token, code, beforeToken) {\n    var _a;\n    if (!this.onParseError) return;\n    const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n    const err = {\n      code,\n      startLine: loc.startLine,\n      startCol: loc.startCol,\n      startOffset: loc.startOffset,\n      endLine: beforeToken ? loc.startLine : loc.endLine,\n      endCol: beforeToken ? loc.startCol : loc.endCol,\n      endOffset: beforeToken ? loc.startOffset : loc.endOffset\n    };\n    this.onParseError(err);\n  }\n  //Stack events\n  onItemPush(node, tid, isTop) {\n    var _a, _b;\n    (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n  }\n  onItemPop(node, isTop) {\n    var _a, _b;\n    if (this.options.sourceCodeLocationInfo) {\n      this._setEndLocation(node, this.currentToken);\n    }\n    (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n    if (isTop) {\n      let current;\n      let currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        ({\n          current,\n          currentTagId\n        } = this.openElements);\n      }\n      this._setContextModes(current, currentTagId);\n    }\n  }\n  _setContextModes(current, tid) {\n    const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n    this.currentNotInHTML = !isHTML;\n    this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n  }\n  _switchToTextParsing(currentToken, nextTokenizerState) {\n    this._insertElement(currentToken, NS.HTML);\n    this.tokenizer.state = nextTokenizerState;\n    this.originalInsertionMode = this.insertionMode;\n    this.insertionMode = InsertionMode.TEXT;\n  }\n  switchToPlaintextParsing() {\n    this.insertionMode = InsertionMode.TEXT;\n    this.originalInsertionMode = InsertionMode.IN_BODY;\n    this.tokenizer.state = TokenizerMode.PLAINTEXT;\n  }\n  //Fragment parsing\n  _getAdjustedCurrentElement() {\n    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n  }\n  _findFormInFragmentContext() {\n    let node = this.fragmentContext;\n    while (node) {\n      if (this.treeAdapter.getTagName(node) === TAG_NAMES.FORM) {\n        this.formElement = node;\n        break;\n      }\n      node = this.treeAdapter.getParentNode(node);\n    }\n  }\n  _initTokenizerForFragmentParsing() {\n    if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n      return;\n    }\n    switch (this.fragmentContextID) {\n      case TAG_ID.TITLE:\n      case TAG_ID.TEXTAREA:\n        {\n          this.tokenizer.state = TokenizerMode.RCDATA;\n          break;\n        }\n      case TAG_ID.STYLE:\n      case TAG_ID.XMP:\n      case TAG_ID.IFRAME:\n      case TAG_ID.NOEMBED:\n      case TAG_ID.NOFRAMES:\n      case TAG_ID.NOSCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.RAWTEXT;\n          break;\n        }\n      case TAG_ID.SCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n          break;\n        }\n      case TAG_ID.PLAINTEXT:\n        {\n          this.tokenizer.state = TokenizerMode.PLAINTEXT;\n          break;\n        }\n      // Do nothing\n    }\n  }\n  //Tree mutation\n  _setDocumentType(token) {\n    const name = token.name || '';\n    const publicId = token.publicId || '';\n    const systemId = token.systemId || '';\n    this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    if (token.location) {\n      const documentChildren = this.treeAdapter.getChildNodes(this.document);\n      const docTypeNode = documentChildren.find(node => this.treeAdapter.isDocumentTypeNode(node));\n      if (docTypeNode) {\n        this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n      }\n    }\n  }\n  _attachElementToTree(element, location) {\n    if (this.options.sourceCodeLocationInfo) {\n      const loc = location && {\n        ...location,\n        startTag: location\n      };\n      this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n    if (this._shouldFosterParentOnInsertion()) {\n      this._fosterParentElement(element);\n    } else {\n      const parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.appendChild(parent, element);\n    }\n  }\n  _appendElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n  }\n  _insertElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n    this.openElements.push(element, token.tagID);\n  }\n  _insertFakeElement(tagName, tagID) {\n    const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n    this._attachElementToTree(element, null);\n    this.openElements.push(element, tagID);\n  }\n  _insertTemplate(token) {\n    const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n    const content = this.treeAdapter.createDocumentFragment();\n    this.treeAdapter.setTemplateContent(tmpl, content);\n    this._attachElementToTree(tmpl, token.location);\n    this.openElements.push(tmpl, token.tagID);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n  }\n  _insertFakeRootElement() {\n    const element = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n    this.treeAdapter.appendChild(this.openElements.current, element);\n    this.openElements.push(element, TAG_ID.HTML);\n  }\n  _appendCommentNode(token, parent) {\n    const commentNode = this.treeAdapter.createCommentNode(token.data);\n    this.treeAdapter.appendChild(parent, commentNode);\n    if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n    }\n  }\n  _insertCharacters(token) {\n    let parent;\n    let beforeElement;\n    if (this._shouldFosterParentOnInsertion()) {\n      ({\n        parent,\n        beforeElement\n      } = this._findFosterParentingLocation());\n      if (beforeElement) {\n        this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n      } else {\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n    } else {\n      parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.insertText(parent, token.chars);\n    }\n    if (!token.location) return;\n    const siblings = this.treeAdapter.getChildNodes(parent);\n    const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n    const textNode = siblings[textNodeIdx - 1];\n    //NOTE: if we have a location assigned by another token, then just update the end position\n    const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n    if (tnLoc) {\n      const {\n        endLine,\n        endCol,\n        endOffset\n      } = token.location;\n      this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n        endLine,\n        endCol,\n        endOffset\n      });\n    } else if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n    }\n  }\n  _adoptNodes(donor, recipient) {\n    for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n      this.treeAdapter.detachNode(child);\n      this.treeAdapter.appendChild(recipient, child);\n    }\n  }\n  _setEndLocation(element, closingToken) {\n    if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n      const ctLoc = closingToken.location;\n      const tn = this.treeAdapter.getTagName(element);\n      const endLoc =\n      // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n      // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n      closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {\n        endTag: {\n          ...ctLoc\n        },\n        endLine: ctLoc.endLine,\n        endCol: ctLoc.endCol,\n        endOffset: ctLoc.endOffset\n      } : {\n        endLine: ctLoc.startLine,\n        endCol: ctLoc.startCol,\n        endOffset: ctLoc.startOffset\n      };\n      this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n    }\n  }\n  //Token processing\n  shouldProcessStartTagTokenInForeignContent(token) {\n    // Check that neither current === document, or ns === NS.HTML\n    if (!this.currentNotInHTML) return false;\n    let current;\n    let currentTagId;\n    if (this.openElements.stackTop === 0 && this.fragmentContext) {\n      current = this.fragmentContext;\n      currentTagId = this.fragmentContextID;\n    } else {\n      ({\n        current,\n        currentTagId\n      } = this.openElements);\n    }\n    if (token.tagID === TAG_ID.SVG && this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n      return false;\n    }\n    return (\n      // Check that `current` is not an integration point for HTML or MathML elements.\n      this.tokenizer.inForeignNode ||\n      // If it _is_ an integration point, then we might have to check that it is not an HTML\n      // integration point.\n      (token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)\n    );\n  }\n  _processToken(token) {\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          this.onCharacter(token);\n          break;\n        }\n      case TokenType.NULL_CHARACTER:\n        {\n          this.onNullCharacter(token);\n          break;\n        }\n      case TokenType.COMMENT:\n        {\n          this.onComment(token);\n          break;\n        }\n      case TokenType.DOCTYPE:\n        {\n          this.onDoctype(token);\n          break;\n        }\n      case TokenType.START_TAG:\n        {\n          this._processStartTag(token);\n          break;\n        }\n      case TokenType.END_TAG:\n        {\n          this.onEndTag(token);\n          break;\n        }\n      case TokenType.EOF:\n        {\n          this.onEof(token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          this.onWhitespaceCharacter(token);\n          break;\n        }\n    }\n  }\n  //Integration points\n  _isIntegrationPoint(tid, element, foreignNS) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    const attrs = this.treeAdapter.getAttrList(element);\n    return isIntegrationPoint(tid, ns, attrs, foreignNS);\n  }\n  //Active formatting elements reconstruction\n  _reconstructActiveFormattingElements() {\n    const listLength = this.activeFormattingElements.entries.length;\n    if (listLength) {\n      const endIndex = this.activeFormattingElements.entries.findIndex(entry => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n      const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n      for (let i = unopenIdx; i >= 0; i--) {\n        const entry = this.activeFormattingElements.entries[i];\n        this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n        entry.element = this.openElements.current;\n      }\n    }\n  }\n  //Close elements\n  _closeTableCell() {\n    this.openElements.generateImpliedEndTags();\n    this.openElements.popUntilTableCellPopped();\n    this.activeFormattingElements.clearToLastMarker();\n    this.insertionMode = InsertionMode.IN_ROW;\n  }\n  _closePElement() {\n    this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);\n    this.openElements.popUntilTagNamePopped(TAG_ID.P);\n  }\n  //Insertion modes\n  _resetInsertionMode() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      //Insertion mode reset map\n      switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n        case TAG_ID.TR:\n          {\n            this.insertionMode = InsertionMode.IN_ROW;\n            return;\n          }\n        case TAG_ID.TBODY:\n        case TAG_ID.THEAD:\n        case TAG_ID.TFOOT:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE_BODY;\n            return;\n          }\n        case TAG_ID.CAPTION:\n          {\n            this.insertionMode = InsertionMode.IN_CAPTION;\n            return;\n          }\n        case TAG_ID.COLGROUP:\n          {\n            this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            return;\n          }\n        case TAG_ID.TABLE:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE;\n            return;\n          }\n        case TAG_ID.BODY:\n          {\n            this.insertionMode = InsertionMode.IN_BODY;\n            return;\n          }\n        case TAG_ID.FRAMESET:\n          {\n            this.insertionMode = InsertionMode.IN_FRAMESET;\n            return;\n          }\n        case TAG_ID.SELECT:\n          {\n            this._resetInsertionModeForSelect(i);\n            return;\n          }\n        case TAG_ID.TEMPLATE:\n          {\n            this.insertionMode = this.tmplInsertionModeStack[0];\n            return;\n          }\n        case TAG_ID.HTML:\n          {\n            this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n            return;\n          }\n        case TAG_ID.TD:\n        case TAG_ID.TH:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_CELL;\n              return;\n            }\n            break;\n          }\n        case TAG_ID.HEAD:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_HEAD;\n              return;\n            }\n            break;\n          }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_BODY;\n  }\n  _resetInsertionModeForSelect(selectIdx) {\n    if (selectIdx > 0) {\n      for (let i = selectIdx - 1; i > 0; i--) {\n        const tn = this.openElements.tagIDs[i];\n        if (tn === TAG_ID.TEMPLATE) {\n          break;\n        } else if (tn === TAG_ID.TABLE) {\n          this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n          return;\n        }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_SELECT;\n  }\n  //Foster parenting\n  _isElementCausesFosterParenting(tn) {\n    return TABLE_STRUCTURE_TAGS.has(tn);\n  }\n  _shouldFosterParentOnInsertion() {\n    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n  }\n  _findFosterParentingLocation() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      const openElement = this.openElements.items[i];\n      switch (this.openElements.tagIDs[i]) {\n        case TAG_ID.TEMPLATE:\n          {\n            if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n              return {\n                parent: this.treeAdapter.getTemplateContent(openElement),\n                beforeElement: null\n              };\n            }\n            break;\n          }\n        case TAG_ID.TABLE:\n          {\n            const parent = this.treeAdapter.getParentNode(openElement);\n            if (parent) {\n              return {\n                parent,\n                beforeElement: openElement\n              };\n            }\n            return {\n              parent: this.openElements.items[i - 1],\n              beforeElement: null\n            };\n          }\n        // Do nothing\n      }\n    }\n    return {\n      parent: this.openElements.items[0],\n      beforeElement: null\n    };\n  }\n  _fosterParentElement(element) {\n    const location = this._findFosterParentingLocation();\n    if (location.beforeElement) {\n      this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n    } else {\n      this.treeAdapter.appendChild(location.parent, element);\n    }\n  }\n  //Special elements\n  _isSpecialElement(element, id) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    return SPECIAL_ELEMENTS[ns].has(id);\n  }\n  onCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      characterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n        {\n          characterInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          characterInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onNullCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      nullCharacterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onComment(token) {\n    this.skipNextNewLine = false;\n    if (this.currentNotInHTML) {\n      appendComment(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n      case InsertionMode.BEFORE_HTML:\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          appendComment(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          appendCommentToRootHtmlElement(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          appendCommentToDocument(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onDoctype(token) {\n    this.skipNextNewLine = false;\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          doctypeInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n        {\n          this._err(token, ERR.misplacedDoctype);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onStartTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    this._processStartTag(token);\n    if (token.selfClosing && !token.ackSelfClosing) {\n      this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n  }\n  /**\n   * Processes a given start tag.\n   *\n   * `onStartTag` checks if a self-closing tag was recognized. When a token\n   * is moved inbetween multiple insertion modes, this check for self-closing\n   * could lead to false positives. To avoid this, `_processStartTag` is used\n   * for nested calls.\n   *\n   * @param token The token to process.\n   */\n  _processStartTag(token) {\n    if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n      startTagInForeignContent(this, token);\n    } else {\n      this._startTagOutsideForeignContent(token);\n    }\n  }\n  _startTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          startTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          startTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          startTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          startTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          startTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          startTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          startTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          startTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          startTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          startTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          startTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          startTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          startTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          startTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          startTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          startTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          startTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          startTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          startTagAfterAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          startTagAfterAfterFrameset(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onEndTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    if (this.currentNotInHTML) {\n      endTagInForeignContent(this, token);\n    } else {\n      this._endTagOutsideForeignContent(token);\n    }\n  }\n  _endTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          endTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          endTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          endTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          endTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          endTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          endTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          endTagInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          endTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          endTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          endTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          endTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          endTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          endTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          endTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          endTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          endTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          endTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          endTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          endTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onEof(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          eofInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          eofInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          eofInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          stopParsing(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n  onWhitespaceCharacter(token) {\n    if (this.skipNextNewLine) {\n      this.skipNextNewLine = false;\n      if (token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED) {\n        if (token.chars.length === 1) {\n          return;\n        }\n        token.chars = token.chars.substr(1);\n      }\n    }\n    if (this.tokenizer.inForeignNode) {\n      this._insertCharacters(token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          whitespaceCharacterInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          whitespaceCharacterInTableText(this, token);\n          break;\n        }\n      // Do nothing\n    }\n  }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  let furthestBlock = null;\n  let idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    const element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  let lastElement = furthestBlock;\n  let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    const elementEntry = p.activeFormattingElements.getElementEntry(element);\n    const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  const tn = p.treeAdapter.getTagName(commonAncestor);\n  const tid = getTagID(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === TAG_ID.TEMPLATE && ns === NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  const {\n    token\n  } = formattingElementEntry;\n  const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    const target = p.fragmentContext ? 0 : 2;\n    for (let i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      const htmlElement = p.openElements.items[0];\n      const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          const bodyElement = p.openElements.items[1];\n          const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);\n  if (!isConforming(token)) {\n    p._err(token, ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === TAG_ID.HTML) {\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  const tn = token.tagID;\n  if (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.HEAD:\n      {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  const tn = token.tagID;\n  if (tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BASE:\n    case TAG_ID.BASEFONT:\n    case TAG_ID.BGSOUND:\n    case TAG_ID.LINK:\n    case TAG_ID.META:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case TAG_ID.TITLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RCDATA);\n        break;\n      }\n    case TAG_ID.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case TAG_ID.NOFRAMES:\n    case TAG_ID.STYLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        break;\n      }\n    case TAG_ID.SCRIPT:\n      {\n        p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case TAG_ID.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.BR:\n    case TAG_ID.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== TAG_ID.TEMPLATE) {\n      p._err(token, ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BASEFONT:\n    case TAG_ID.BGSOUND:\n    case TAG_ID.HEAD:\n    case TAG_ID.LINK:\n    case TAG_ID.META:\n    case TAG_ID.NOFRAMES:\n    case TAG_ID.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case TAG_ID.NOSCRIPT:\n      {\n        p._err(token, ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case TAG_ID.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BODY:\n      {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case TAG_ID.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case TAG_ID.BASE:\n    case TAG_ID.BASEFONT:\n    case TAG_ID.BGSOUND:\n    case TAG_ID.LINK:\n    case TAG_ID.META:\n    case TAG_ID.NOFRAMES:\n    case TAG_ID.SCRIPT:\n    case TAG_ID.STYLE:\n    case TAG_ID.TEMPLATE:\n    case TAG_ID.TITLE:\n      {\n        p._err(token, ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, TAG_ID.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case TAG_ID.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.BODY:\n    case TAG_ID.HTML:\n    case TAG_ID.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  if (isNumberedHeader(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  const tn = token.tagID;\n  for (let i = p.openElements.stackTop; i >= 0; i--) {\n    const elementId = p.openElements.tagIDs[i];\n    if (tn === TAG_ID.LI && elementId === TAG_ID.LI || (tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== TAG_ID.ADDRESS && elementId !== TAG_ID.DIV && elementId !== TAG_ID.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(TAG_ID.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope(TAG_ID.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  const inputType = getTokenAttr(token, ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = TAG_NAMES.IMG;\n  token.tagID = TAG_ID.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === TAG_ID.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(TAG_ID.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(TAG_ID.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  adjustTokenMathMLAttrs(token);\n  adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.MATHML);\n  } else {\n    p._insertElement(token, NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  adjustTokenSVGAttrs(token);\n  adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.SVG);\n  } else {\n    p._insertElement(token, NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.I:\n    case TAG_ID.S:\n    case TAG_ID.B:\n    case TAG_ID.U:\n    case TAG_ID.EM:\n    case TAG_ID.TT:\n    case TAG_ID.BIG:\n    case TAG_ID.CODE:\n    case TAG_ID.FONT:\n    case TAG_ID.SMALL:\n    case TAG_ID.STRIKE:\n    case TAG_ID.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.H1:\n    case TAG_ID.H2:\n    case TAG_ID.H3:\n    case TAG_ID.H4:\n    case TAG_ID.H5:\n    case TAG_ID.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.P:\n    case TAG_ID.DL:\n    case TAG_ID.OL:\n    case TAG_ID.UL:\n    case TAG_ID.DIV:\n    case TAG_ID.DIR:\n    case TAG_ID.NAV:\n    case TAG_ID.MAIN:\n    case TAG_ID.MENU:\n    case TAG_ID.ASIDE:\n    case TAG_ID.CENTER:\n    case TAG_ID.FIGURE:\n    case TAG_ID.FOOTER:\n    case TAG_ID.HEADER:\n    case TAG_ID.HGROUP:\n    case TAG_ID.DIALOG:\n    case TAG_ID.DETAILS:\n    case TAG_ID.ADDRESS:\n    case TAG_ID.ARTICLE:\n    case TAG_ID.SECTION:\n    case TAG_ID.SUMMARY:\n    case TAG_ID.FIELDSET:\n    case TAG_ID.BLOCKQUOTE:\n    case TAG_ID.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.LI:\n    case TAG_ID.DD:\n    case TAG_ID.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BR:\n    case TAG_ID.IMG:\n    case TAG_ID.WBR:\n    case TAG_ID.AREA:\n    case TAG_ID.EMBED:\n    case TAG_ID.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.RB:\n    case TAG_ID.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.RT:\n    case TAG_ID.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.PRE:\n    case TAG_ID.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BASE:\n    case TAG_ID.LINK:\n    case TAG_ID.META:\n    case TAG_ID.STYLE:\n    case TAG_ID.TITLE:\n    case TAG_ID.SCRIPT:\n    case TAG_ID.BGSOUND:\n    case TAG_ID.BASEFONT:\n    case TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case TAG_ID.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.PARAM:\n    case TAG_ID.TRACK:\n    case TAG_ID.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.APPLET:\n    case TAG_ID.OBJECT:\n    case TAG_ID.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.OPTION:\n    case TAG_ID.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.NOEMBED:\n      {\n        noembedStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          noembedStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case TAG_ID.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.COL:\n    case TAG_ID.TH:\n    case TAG_ID.TD:\n    case TAG_ID.TR:\n    case TAG_ID.HEAD:\n    case TAG_ID.FRAME:\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n    case TAG_ID.CAPTION:\n    case TAG_ID.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope(TAG_ID.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope(TAG_ID.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  const {\n    formElement\n  } = p;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope(TAG_ID.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped(TAG_ID.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope(TAG_ID.P)) {\n    p._insertFakeElement(TAG_NAMES.P, TAG_ID.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope(TAG_ID.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);\n    p.openElements.popUntilTagNamePopped(TAG_ID.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  const tn = token.tagName;\n  const tid = token.tagID;\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    const elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.A:\n    case TAG_ID.B:\n    case TAG_ID.I:\n    case TAG_ID.S:\n    case TAG_ID.U:\n    case TAG_ID.EM:\n    case TAG_ID.TT:\n    case TAG_ID.BIG:\n    case TAG_ID.CODE:\n    case TAG_ID.FONT:\n    case TAG_ID.NOBR:\n    case TAG_ID.SMALL:\n    case TAG_ID.STRIKE:\n    case TAG_ID.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case TAG_ID.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case TAG_ID.DL:\n    case TAG_ID.UL:\n    case TAG_ID.OL:\n    case TAG_ID.DIR:\n    case TAG_ID.DIV:\n    case TAG_ID.NAV:\n    case TAG_ID.PRE:\n    case TAG_ID.MAIN:\n    case TAG_ID.MENU:\n    case TAG_ID.ASIDE:\n    case TAG_ID.BUTTON:\n    case TAG_ID.CENTER:\n    case TAG_ID.FIGURE:\n    case TAG_ID.FOOTER:\n    case TAG_ID.HEADER:\n    case TAG_ID.HGROUP:\n    case TAG_ID.DIALOG:\n    case TAG_ID.ADDRESS:\n    case TAG_ID.ARTICLE:\n    case TAG_ID.DETAILS:\n    case TAG_ID.SECTION:\n    case TAG_ID.SUMMARY:\n    case TAG_ID.LISTING:\n    case TAG_ID.FIELDSET:\n    case TAG_ID.BLOCKQUOTE:\n    case TAG_ID.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case TAG_ID.DD:\n    case TAG_ID.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.H1:\n    case TAG_ID.H2:\n    case TAG_ID.H3:\n    case TAG_ID.H4:\n    case TAG_ID.H5:\n    case TAG_ID.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case TAG_ID.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case TAG_ID.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case TAG_ID.APPLET:\n    case TAG_ID.OBJECT:\n    case TAG_ID.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === TAG_ID.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\n    p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.TD:\n    case TAG_ID.TH:\n    case TAG_ID.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.STYLE:\n    case TAG_ID.SCRIPT:\n    case TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case TAG_ID.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\n          p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.HTML:\n    case TAG_ID.TBODY:\n    case TAG_ID.TD:\n    case TAG_ID.TFOOT:\n    case TAG_ID.TH:\n    case TAG_ID.THEAD:\n    case TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  const savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  let i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);\nfunction startTagInCaption(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case TAG_ID.CAPTION:\n    case TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === TAG_ID.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.HTML:\n    case TAG_ID.TBODY:\n    case TAG_ID.TD:\n    case TAG_ID.TFOOT:\n    case TAG_ID.TH:\n    case TAG_ID.THEAD:\n    case TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.COL:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.COLGROUP:\n      {\n        if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case TAG_ID.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case TAG_ID.TH:\n    case TAG_ID.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  const tn = token.tagID;\n  switch (token.tagID) {\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case TAG_ID.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.HTML:\n    case TAG_ID.TD:\n    case TAG_ID.TH:\n    case TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.TH:\n    case TAG_ID.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n    case TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.HTML:\n    case TAG_ID.TD:\n    case TAG_ID.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope(TAG_ID.TD) || p.openElements.hasInTableScope(TAG_ID.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case TAG_ID.TD:\n    case TAG_ID.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case TAG_ID.TABLE:\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n    case TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case TAG_ID.BODY:\n    case TAG_ID.CAPTION:\n    case TAG_ID.COL:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.OPTION:\n      {\n        if (p.openElements.currentTagId === TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case TAG_ID.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case TAG_ID.INPUT:\n    case TAG_ID.KEYGEN:\n    case TAG_ID.TEXTAREA:\n    case TAG_ID.SELECT:\n      {\n        if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\n          p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== TAG_ID.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case TAG_ID.SCRIPT:\n    case TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === TAG_ID.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case TAG_ID.OPTION:\n      {\n        if (p.openElements.currentTagId === TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case TAG_ID.SELECT:\n      {\n        if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\n          p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH) {\n    p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === TAG_ID.CAPTION || tn === TAG_ID.TABLE || tn === TAG_ID.TBODY || tn === TAG_ID.TFOOT || tn === TAG_ID.THEAD || tn === TAG_ID.TR || tn === TAG_ID.TD || tn === TAG_ID.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case TAG_ID.BASE:\n    case TAG_ID.BASEFONT:\n    case TAG_ID.BGSOUND:\n    case TAG_ID.LINK:\n    case TAG_ID.META:\n    case TAG_ID.NOFRAMES:\n    case TAG_ID.SCRIPT:\n    case TAG_ID.STYLE:\n    case TAG_ID.TEMPLATE:\n    case TAG_ID.TITLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Re-process the token in the appropriate mode\n    case TAG_ID.CAPTION:\n    case TAG_ID.COLGROUP:\n    case TAG_ID.TBODY:\n    case TAG_ID.TFOOT:\n    case TAG_ID.THEAD:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n        p.insertionMode = InsertionMode.IN_TABLE;\n        startTagInTable(p, token);\n        break;\n      }\n    case TAG_ID.COL:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n        p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n        startTagInColumnGroup(p, token);\n        break;\n      }\n    case TAG_ID.TR:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n        p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        startTagInTableBody(p, token);\n        break;\n      }\n    case TAG_ID.TD:\n    case TAG_ID.TH:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    default:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n        p.insertionMode = InsertionMode.IN_BODY;\n        startTagInBody(p, token);\n      }\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === TAG_ID.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === TAG_ID.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === TAG_ID.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === TAG_ID.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      const bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case TAG_ID.FRAME:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== TAG_ID.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === TAG_ID.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === TAG_ID.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    const current = p._getAdjustedCurrentElement();\n    const currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === NS.MATHML) {\n      adjustTokenMathMLAttrs(token);\n    } else if (currentNs === NS.SVG) {\n      adjustTokenSVGTagName(token);\n      adjustTokenSVGAttrs(token);\n    }\n    adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    const tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}\n\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nfunction parse(html, options) {\n  return Parser.parse(html, options);\n}\nexport { ERR as ErrorCodes, Parser, Tokenizer, TokenizerMode, defaultTreeAdapter, parse };","map":{"version":3,"names":["fileURLToPath","__cjs_fileURLToPath","dirname","__cjs_dirname","createRequire","__cjs_createRequire","__filename","import","meta","url","__dirname","require","__require","UNDEFINED_CODE_POINTS","Set","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","DASH_DASH","CDATA_START","DOCTYPE","SCRIPT","PUBLIC","SYSTEM","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","has","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","constructor","handler","html","pos","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","Number","offset","getError","code","startLine","endLine","startCol","endCol","startOffset","endOffset","_err","onParseError","_addGap","push","_processSurrogate","length","nextCp","charCodeAt","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","caseSensitive","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","isCommonValidRange","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","attrs","name","value","htmlDecodeTree","Uint16Array","split","map","c","CharCodes","BinTrieFlags","determineBranch","decodeTree","current","nodeIdx","char","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","Map","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","tagName","_a","get","UNKNOWN","$","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","isAsciiAlphaNumeric","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","isAsciiHexDigit","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isEntityInAttributeInvalidEnd","EQUALS_SIGN","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","options","paused","inLoop","inForeignNode","lastStartTagName","active","state","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","call","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","Error","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","type","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","data","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","attrLocations","Object","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","String","fromCodePoint","_emitChars","_matchNamedCharacterReference","result","excess","withoutSemicolon","masked","VALUE_LENGTH","valueLength","SEMICOLON","_isCharacterReferenceInAttribute","AMPERSAND","missingSemicolonAfterCharacterReference","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","fromCharCode","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","absenceOfDigitsInNumericCharacterReference","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","undefined","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","namespace","includes","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","unshift","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","indexOf","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","find","getElementEntry","createTextNode","nodeName","parentNode","defaultTreeAdapter","createDocument","mode","NO_QUIRKS","childNodes","createDocumentFragment","createElement","namespaceURI","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","content","setDocumentType","doctypeNode","node","setDocumentMode","getDocumentMode","detachNode","insertText","text","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","prototype","hasOwnProperty","setNodeSourceCodeLocation","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","prefix","isConforming","QUIRKS","toLowerCase","LIMITED_QUIRKS","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","isFontWithAttrs","COLOR","SIZE","FACE","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","isHtmlIntegrationPoint","ENCODING","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","documentChildren","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","tnLoc","donor","child","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","unopenIdx","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","id","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","shouldRemoveFromOpenElements","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","nonConformingDoctype","missingDoctype","endTagWithoutMatchingOpenElement","misplacedStartTagForHeadElement","templateEndTagInHead","closingOfElementWithOpenChildElements","shift","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","svgStartTagInBody","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","popUntilHtmlOrIntegrationPoint","currentNs","ErrorCodes"],"sources":["C:/Users/100li/node_modules/vite/dist/node/chunks/dep-f0c7dae0.js"],"sourcesContent":["import { fileURLToPath as __cjs_fileURLToPath } from 'node:url';\nimport { dirname as __cjs_dirname } from 'node:path';\nimport { createRequire as __cjs_createRequire } from 'node:module';\n\nconst __filename = __cjs_fileURLToPath(import.meta.url);\nconst __dirname = __cjs_dirname(__filename);\nconst require = __cjs_createRequire(import.meta.url);\nconst __require = require;\nconst UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nconst REPLACEMENT_CHARACTER = '\\uFFFD';\nvar CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nconst SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nfunction isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nfunction isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nfunction getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nfunction isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nfunction isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n\nvar ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return CODE_POINTS.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return CODE_POINTS.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return CODE_POINTS.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === CODE_POINTS.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return CODE_POINTS.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === CODE_POINTS.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === CODE_POINTS.LINE_FEED ||\n            cp === CODE_POINTS.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nfunction getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n\n// Generated using scripts/write-decode-map.ts\nvar htmlDecodeTree = new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\n// Generated using scripts/write-decode-map.ts\nnew Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    /** Bit that needs to be set to convert an upper case ASCII character to lower case */\n    CharCodes[CharCodes[\"To_LOWER_BIT\"] = 32] = \"To_LOWER_BIT\";\n})(CharCodes || (CharCodes = {}));\nvar BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\n\n/** All valid namespaces in HTML. */\nvar NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nvar ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nvar DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nvar TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nvar TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nfunction getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nconst SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nfunction isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\n\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nconst TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;\n}\n//Tokenizer\nclass Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === CODE_POINTS.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== CODE_POINTS.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [CODE_POINTS.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== CODE_POINTS.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case CODE_POINTS.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case CODE_POINTS.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case CODE_POINTS.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case CODE_POINTS.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case CODE_POINTS.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case CODE_POINTS.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case CODE_POINTS.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case CODE_POINTS.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case CODE_POINTS.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === CODE_POINTS.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case CODE_POINTS.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === CODE_POINTS.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case CODE_POINTS.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case CODE_POINTS.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.SOLIDUS:\n            case CODE_POINTS.GREATER_THAN_SIGN:\n            case CODE_POINTS.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case CODE_POINTS.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED:\n            case CODE_POINTS.SOLIDUS:\n            case CODE_POINTS.GREATER_THAN_SIGN:\n            case CODE_POINTS.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case CODE_POINTS.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK:\n            case CODE_POINTS.APOSTROPHE:\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case CODE_POINTS.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case CODE_POINTS.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK:\n            case CODE_POINTS.APOSTROPHE:\n            case CODE_POINTS.LESS_THAN_SIGN:\n            case CODE_POINTS.EQUALS_SIGN:\n            case CODE_POINTS.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case CODE_POINTS.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, true)) {\n            this._createCommentToken(SEQUENCES.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken(SEQUENCES.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case CODE_POINTS.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case CODE_POINTS.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case CODE_POINTS.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case CODE_POINTS.SPACE:\n                case CODE_POINTS.LINE_FEED:\n                case CODE_POINTS.TABULATION:\n                case CODE_POINTS.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case CODE_POINTS.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case CODE_POINTS.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case CODE_POINTS.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.SPACE:\n            case CODE_POINTS.LINE_FEED:\n            case CODE_POINTS.TABULATION:\n            case CODE_POINTS.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case CODE_POINTS.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === CODE_POINTS.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case CODE_POINTS.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === CODE_POINTS.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) ;\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === CODE_POINTS.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === CODE_POINTS.LATIN_SMALL_X || cp === CODE_POINTS.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === CODE_POINTS.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === CODE_POINTS.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === CODE_POINTS.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === CODE_POINTS.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    TAG_ID.CAPTION,\n    TAG_ID.COLGROUP,\n    TAG_ID.TBODY,\n    TAG_ID.TD,\n    TAG_ID.TFOOT,\n    TAG_ID.TH,\n    TAG_ID.THEAD,\n    TAG_ID.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [TAG_ID.APPLET, NS.HTML],\n    [TAG_ID.CAPTION, NS.HTML],\n    [TAG_ID.HTML, NS.HTML],\n    [TAG_ID.MARQUEE, NS.HTML],\n    [TAG_ID.OBJECT, NS.HTML],\n    [TAG_ID.TABLE, NS.HTML],\n    [TAG_ID.TD, NS.HTML],\n    [TAG_ID.TEMPLATE, NS.HTML],\n    [TAG_ID.TH, NS.HTML],\n    [TAG_ID.ANNOTATION_XML, NS.MATHML],\n    [TAG_ID.MI, NS.MATHML],\n    [TAG_ID.MN, NS.MATHML],\n    [TAG_ID.MO, NS.MATHML],\n    [TAG_ID.MS, NS.MATHML],\n    [TAG_ID.MTEXT, NS.MATHML],\n    [TAG_ID.DESC, NS.SVG],\n    [TAG_ID.FOREIGN_OBJECT, NS.SVG],\n    [TAG_ID.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6];\nconst TABLE_ROW_CONTEXT = [TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_BODY_CONTEXT = [TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_CONTEXT = [TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML];\nconst TABLE_CELLS = [TAG_ID.TD, TAG_ID.TH];\n//Stack of open elements\nclass OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = TAG_ID.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === TAG_ID.UL || tn === TAG_ID.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === TAG_ID.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === TAG_ID.TABLE || tn === TAG_ID.TEMPLATE || tn === TAG_ID.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === TAG_ID.TBODY || tn === TAG_ID.THEAD || tn === TAG_ID.TFOOT) {\n                return true;\n            }\n            if (tn === TAG_ID.TABLE || tn === TAG_ID.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== TAG_ID.OPTION && tn !== TAG_ID.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n\n//Const\nconst NOAH_ARK_CAPACITY = 3;\nvar EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nconst defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nfunction isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nfunction getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    TAG_ID.B,\n    TAG_ID.BIG,\n    TAG_ID.BLOCKQUOTE,\n    TAG_ID.BODY,\n    TAG_ID.BR,\n    TAG_ID.CENTER,\n    TAG_ID.CODE,\n    TAG_ID.DD,\n    TAG_ID.DIV,\n    TAG_ID.DL,\n    TAG_ID.DT,\n    TAG_ID.EM,\n    TAG_ID.EMBED,\n    TAG_ID.H1,\n    TAG_ID.H2,\n    TAG_ID.H3,\n    TAG_ID.H4,\n    TAG_ID.H5,\n    TAG_ID.H6,\n    TAG_ID.HEAD,\n    TAG_ID.HR,\n    TAG_ID.I,\n    TAG_ID.IMG,\n    TAG_ID.LI,\n    TAG_ID.LISTING,\n    TAG_ID.MENU,\n    TAG_ID.META,\n    TAG_ID.NOBR,\n    TAG_ID.OL,\n    TAG_ID.P,\n    TAG_ID.PRE,\n    TAG_ID.RUBY,\n    TAG_ID.S,\n    TAG_ID.SMALL,\n    TAG_ID.SPAN,\n    TAG_ID.STRONG,\n    TAG_ID.STRIKE,\n    TAG_ID.SUB,\n    TAG_ID.SUP,\n    TAG_ID.TABLE,\n    TAG_ID.TT,\n    TAG_ID.U,\n    TAG_ID.UL,\n    TAG_ID.VAR,\n]);\n//Check exit from foreign content\nfunction causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === TAG_ID.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nfunction adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nfunction adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nfunction adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nfunction adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);\n}\nfunction isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nclass Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === TAG_ID.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TAG_NAMES.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case TAG_ID.TITLE:\n            case TAG_ID.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case TAG_ID.STYLE:\n            case TAG_ID.XMP:\n            case TAG_ID.IFRAME:\n            case TAG_ID.NOEMBED:\n            case TAG_ID.NOFRAMES:\n            case TAG_ID.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case TAG_ID.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case TAG_ID.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, TAG_ID.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === TAG_ID.SVG &&\n            this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);\n        this.openElements.popUntilTagNamePopped(TAG_ID.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case TAG_ID.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case TAG_ID.TBODY:\n                case TAG_ID.THEAD:\n                case TAG_ID.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case TAG_ID.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case TAG_ID.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case TAG_ID.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case TAG_ID.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case TAG_ID.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case TAG_ID.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case TAG_ID.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case TAG_ID.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case TAG_ID.TD:\n                case TAG_ID.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case TAG_ID.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === TAG_ID.TEMPLATE) {\n                    break;\n                }\n                else if (tn === TAG_ID.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case TAG_ID.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case TAG_ID.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === TAG_ID.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);\n    if (!isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === TAG_ID.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BASE:\n        case TAG_ID.BASEFONT:\n        case TAG_ID.BGSOUND:\n        case TAG_ID.LINK:\n        case TAG_ID.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case TAG_ID.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case TAG_ID.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case TAG_ID.NOFRAMES:\n        case TAG_ID.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case TAG_ID.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case TAG_ID.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.BR:\n        case TAG_ID.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== TAG_ID.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BASEFONT:\n        case TAG_ID.BGSOUND:\n        case TAG_ID.HEAD:\n        case TAG_ID.LINK:\n        case TAG_ID.META:\n        case TAG_ID.NOFRAMES:\n        case TAG_ID.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case TAG_ID.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case TAG_ID.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case TAG_ID.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case TAG_ID.BASE:\n        case TAG_ID.BASEFONT:\n        case TAG_ID.BGSOUND:\n        case TAG_ID.LINK:\n        case TAG_ID.META:\n        case TAG_ID.NOFRAMES:\n        case TAG_ID.SCRIPT:\n        case TAG_ID.STYLE:\n        case TAG_ID.TEMPLATE:\n        case TAG_ID.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, TAG_ID.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case TAG_ID.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.BODY:\n        case TAG_ID.HTML:\n        case TAG_ID.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === TAG_ID.LI && elementId === TAG_ID.LI) ||\n            ((tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== TAG_ID.ADDRESS &&\n            elementId !== TAG_ID.DIV &&\n            elementId !== TAG_ID.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(TAG_ID.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope(TAG_ID.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TAG_NAMES.IMG;\n    token.tagID = TAG_ID.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === TAG_ID.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    adjustTokenMathMLAttrs(token);\n    adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    adjustTokenSVGAttrs(token);\n    adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.I:\n        case TAG_ID.S:\n        case TAG_ID.B:\n        case TAG_ID.U:\n        case TAG_ID.EM:\n        case TAG_ID.TT:\n        case TAG_ID.BIG:\n        case TAG_ID.CODE:\n        case TAG_ID.FONT:\n        case TAG_ID.SMALL:\n        case TAG_ID.STRIKE:\n        case TAG_ID.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.H1:\n        case TAG_ID.H2:\n        case TAG_ID.H3:\n        case TAG_ID.H4:\n        case TAG_ID.H5:\n        case TAG_ID.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.P:\n        case TAG_ID.DL:\n        case TAG_ID.OL:\n        case TAG_ID.UL:\n        case TAG_ID.DIV:\n        case TAG_ID.DIR:\n        case TAG_ID.NAV:\n        case TAG_ID.MAIN:\n        case TAG_ID.MENU:\n        case TAG_ID.ASIDE:\n        case TAG_ID.CENTER:\n        case TAG_ID.FIGURE:\n        case TAG_ID.FOOTER:\n        case TAG_ID.HEADER:\n        case TAG_ID.HGROUP:\n        case TAG_ID.DIALOG:\n        case TAG_ID.DETAILS:\n        case TAG_ID.ADDRESS:\n        case TAG_ID.ARTICLE:\n        case TAG_ID.SECTION:\n        case TAG_ID.SUMMARY:\n        case TAG_ID.FIELDSET:\n        case TAG_ID.BLOCKQUOTE:\n        case TAG_ID.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.LI:\n        case TAG_ID.DD:\n        case TAG_ID.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BR:\n        case TAG_ID.IMG:\n        case TAG_ID.WBR:\n        case TAG_ID.AREA:\n        case TAG_ID.EMBED:\n        case TAG_ID.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.RB:\n        case TAG_ID.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.RT:\n        case TAG_ID.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.PRE:\n        case TAG_ID.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BASE:\n        case TAG_ID.LINK:\n        case TAG_ID.META:\n        case TAG_ID.STYLE:\n        case TAG_ID.TITLE:\n        case TAG_ID.SCRIPT:\n        case TAG_ID.BGSOUND:\n        case TAG_ID.BASEFONT:\n        case TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case TAG_ID.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.PARAM:\n        case TAG_ID.TRACK:\n        case TAG_ID.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.APPLET:\n        case TAG_ID.OBJECT:\n        case TAG_ID.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.OPTION:\n        case TAG_ID.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case TAG_ID.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.COL:\n        case TAG_ID.TH:\n        case TAG_ID.TD:\n        case TAG_ID.TR:\n        case TAG_ID.HEAD:\n        case TAG_ID.FRAME:\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD:\n        case TAG_ID.CAPTION:\n        case TAG_ID.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope(TAG_ID.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped(TAG_ID.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope(TAG_ID.P)) {\n        p._insertFakeElement(TAG_NAMES.P, TAG_ID.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope(TAG_ID.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);\n        p.openElements.popUntilTagNamePopped(TAG_ID.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.A:\n        case TAG_ID.B:\n        case TAG_ID.I:\n        case TAG_ID.S:\n        case TAG_ID.U:\n        case TAG_ID.EM:\n        case TAG_ID.TT:\n        case TAG_ID.BIG:\n        case TAG_ID.CODE:\n        case TAG_ID.FONT:\n        case TAG_ID.NOBR:\n        case TAG_ID.SMALL:\n        case TAG_ID.STRIKE:\n        case TAG_ID.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case TAG_ID.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case TAG_ID.DL:\n        case TAG_ID.UL:\n        case TAG_ID.OL:\n        case TAG_ID.DIR:\n        case TAG_ID.DIV:\n        case TAG_ID.NAV:\n        case TAG_ID.PRE:\n        case TAG_ID.MAIN:\n        case TAG_ID.MENU:\n        case TAG_ID.ASIDE:\n        case TAG_ID.BUTTON:\n        case TAG_ID.CENTER:\n        case TAG_ID.FIGURE:\n        case TAG_ID.FOOTER:\n        case TAG_ID.HEADER:\n        case TAG_ID.HGROUP:\n        case TAG_ID.DIALOG:\n        case TAG_ID.ADDRESS:\n        case TAG_ID.ARTICLE:\n        case TAG_ID.DETAILS:\n        case TAG_ID.SECTION:\n        case TAG_ID.SUMMARY:\n        case TAG_ID.LISTING:\n        case TAG_ID.FIELDSET:\n        case TAG_ID.BLOCKQUOTE:\n        case TAG_ID.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case TAG_ID.DD:\n        case TAG_ID.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.H1:\n        case TAG_ID.H2:\n        case TAG_ID.H3:\n        case TAG_ID.H4:\n        case TAG_ID.H5:\n        case TAG_ID.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case TAG_ID.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case TAG_ID.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case TAG_ID.APPLET:\n        case TAG_ID.OBJECT:\n        case TAG_ID.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === TAG_ID.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\n        p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.TD:\n        case TAG_ID.TH:\n        case TAG_ID.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.STYLE:\n        case TAG_ID.SCRIPT:\n        case TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case TAG_ID.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\n                p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.HTML:\n        case TAG_ID.TBODY:\n        case TAG_ID.TD:\n        case TAG_ID.TFOOT:\n        case TAG_ID.TH:\n        case TAG_ID.THEAD:\n        case TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case TAG_ID.CAPTION:\n        case TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === TAG_ID.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.HTML:\n        case TAG_ID.TBODY:\n        case TAG_ID.TD:\n        case TAG_ID.TFOOT:\n        case TAG_ID.TH:\n        case TAG_ID.THEAD:\n        case TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.COLGROUP: {\n            if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case TAG_ID.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case TAG_ID.TH:\n        case TAG_ID.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case TAG_ID.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.HTML:\n        case TAG_ID.TD:\n        case TAG_ID.TH:\n        case TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.TH:\n        case TAG_ID.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD:\n        case TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.HTML:\n        case TAG_ID.TD:\n        case TAG_ID.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(TAG_ID.TD) || p.openElements.hasInTableScope(TAG_ID.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case TAG_ID.TD:\n        case TAG_ID.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case TAG_ID.TABLE:\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD:\n        case TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case TAG_ID.BODY:\n        case TAG_ID.CAPTION:\n        case TAG_ID.COL:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.OPTION: {\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case TAG_ID.OPTGROUP: {\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case TAG_ID.INPUT:\n        case TAG_ID.KEYGEN:\n        case TAG_ID.TEXTAREA:\n        case TAG_ID.SELECT: {\n            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\n                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== TAG_ID.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case TAG_ID.SCRIPT:\n        case TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === TAG_ID.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case TAG_ID.OPTION: {\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case TAG_ID.SELECT: {\n            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\n                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === TAG_ID.CAPTION ||\n        tn === TAG_ID.TABLE ||\n        tn === TAG_ID.TBODY ||\n        tn === TAG_ID.TFOOT ||\n        tn === TAG_ID.THEAD ||\n        tn === TAG_ID.TR ||\n        tn === TAG_ID.TD ||\n        tn === TAG_ID.TH) {\n        p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === TAG_ID.CAPTION ||\n        tn === TAG_ID.TABLE ||\n        tn === TAG_ID.TBODY ||\n        tn === TAG_ID.TFOOT ||\n        tn === TAG_ID.THEAD ||\n        tn === TAG_ID.TR ||\n        tn === TAG_ID.TD ||\n        tn === TAG_ID.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case TAG_ID.BASE:\n        case TAG_ID.BASEFONT:\n        case TAG_ID.BGSOUND:\n        case TAG_ID.LINK:\n        case TAG_ID.META:\n        case TAG_ID.NOFRAMES:\n        case TAG_ID.SCRIPT:\n        case TAG_ID.STYLE:\n        case TAG_ID.TEMPLATE:\n        case TAG_ID.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case TAG_ID.CAPTION:\n        case TAG_ID.COLGROUP:\n        case TAG_ID.TBODY:\n        case TAG_ID.TFOOT:\n        case TAG_ID.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case TAG_ID.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case TAG_ID.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case TAG_ID.TD:\n        case TAG_ID.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === TAG_ID.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === TAG_ID.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === TAG_ID.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === TAG_ID.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case TAG_ID.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== TAG_ID.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === TAG_ID.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === TAG_ID.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            adjustTokenSVGTagName(token);\n            adjustTokenSVGAttrs(token);\n        }\n        adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nfunction parse(html, options) {\n    return Parser.parse(html, options);\n}\n\nexport { ERR as ErrorCodes, Parser, Tokenizer, TokenizerMode, defaultTreeAdapter, parse };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}